{"version":3,"sources":["utils.js","Socket.js","NumberNode.js","DisplayNode.js","MathNode.js","PenNode.js","DataNode.js","RGBNode.js","RGBSplitNode.js","RGBPickerNode.js","WaveNode.js","RampNode.js","InfoNode.js","Connection.js","testState.js","ContextMenu.js","NodeContainer.js","makeNode.js","Canvas.js","App.js","serviceWorker.js","index.js"],"names":["formatRGB","rgb","concat","compareArrays","a","b","length","i","rgbToHex","r","g","componentToHex","c","hex","toString","Socket","props","_this","Object","classCallCheck","this","_super","call","handleMouseDown","bind","assertThisInitialized","handleMouseDp","handleMouseUp","formatValue","type","isNaN","value","parseFloat","toFixed","e","handleDraftConnection","id","handleDraftConnectionDrop","react_default","createElement","className","data-type","onMouseDown","onMouseUp","label","React","Component","NumberNode","state","dragging","handleClose","handleChange","handleDragStart","handleDragEnd","handleDraftConection","handleDraftConectionDrop","removeNode","v","target","updateOutput","update","setState","socketID","startDraftConnection","finishDraftConection","_this2","nodeCSS","width","height","transform","x","y","outputs","map","socket","Socket_Socket","key","finishDraftConectionDrop","data-dragging","style","title","onClick","viewBox","d","onChange","DisplayNode","finishDraftConnection","inputs","MathNode","solve","componentDidUpdate","handleSelect","operation","result","prevProps","outputValue","updateNodes","PenNode","radius","fill","newPen","pen","updatePen","drawingData","distance","utils","finishDraftConnectionDrop","formatOutput","_rgb","exec","parseInt","canvasRef","createRef","drawWave","componentDidMount","current","getContext","fillCircle","beginPath","arc","Math","PI","canvas","n","t","f","ro","p","sin","asin","sgn","atan","tan","clearRect","fillStyle","fillRect","moveTo","lineTo","lineWidth","stroke","closePath","ref","draggingStopIndex","cachedValue","stops","position","color","picker","drawGradient","handleStopColorChange","handleStopMouseDown","handleStopMouseUp","handleStopDrag","addStop","removeStop","triggerColorPicker","gradient","createLinearGradient","forEach","stop","addColorStop","index","dataset","prevState","stopPropagation","clientX","imageData","getImageData","data","push","click","splice","preventDefault","_this3","stopCSS","left","indicatorCSS","background","data-index","onMouseMove","Connection","x1","y1","x2","y2","generatePath","testState","contextMenu","isOpen","draftConnection","isActive","from","nodeID","mouse","drag","nodeIndex","nodes","connections","to","ContextMenu","handleClick","addNode","getAttribute","menuCSS","data-value","NodeContainer","getNodeByID","handleMouseMove","handleContextMenu","node","random","makeNode","filter","proposedConnection","isConnectionValid","dragIndex","deltaX","deltaY","clientY","_this4","sqrt","pow","console","error","outputIndex","newValue","_this5","relevantConnections","_loop","rc","toIndex","fromIndex","connectionItems","Connection_Connection","nodeItems","NumberNode_NumberNode","DataNode_NumberNode","DisplayNode_DisplayNode","MathNode_MathNode","PenNode_PenNode","RGBNode_NumberNode","RGBPickerNode_NumberNode","RGBSplitNode_NumberNode","WaveNode_NumberNode","RampNode_NumberNode","InfoNode_NumberNode","ContextMenu_ContextMenu","fromNode","onContextMenu","Canvas","isDrawing","clear","resetData","saveImage","updateDrawingData","speed","toBlob","blob","URLObj","window","URL","webkitURL","document","href","createObjectURL","download","body","appendChild","removeChild","area","App","newData","innerHeight","innerWidth","NodeContainer_NodeContainer","Canvas_Canvas","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6311ae1a.chunk.js","sourcesContent":["export function distance(x1, y1, x2, y2) {\r\n    return Math.sqrt(Math.pow((x1 - x2), 2) - Math.pow((y1 - y2), 2));\r\n}\r\n\r\nexport function formatRGB(rgb) {\r\n    return `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`\r\n}\r\n\r\nexport function compareArrays(a, b) {\r\n    if (a.length !== b.length) { return false }\r\n    for (let i = 0; i < a.length; i++) {\r\n        if (a[i] !== b[i]) {\r\n            return false\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function rgbToHex(rgb) {\r\n    const r = rgb[0]\r\n    const g = rgb[1]\r\n    const b = rgb[2]\r\n\r\n    function componentToHex(c) {\r\n        var hex = c.toString(16);\r\n        return hex.length === 1 ? \"0\" + hex : hex;\r\n    }\r\n    return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\nexport function hexToRGB(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n      r: parseInt(result[1], 16),\r\n      g: parseInt(result[2], 16),\r\n      b: parseInt(result[3], 16)\r\n    } : null;\r\n  }\r\n  ","import React from 'react';\r\n\r\nexport default class Socket extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleMouseDp = this.handleMouseUp.bind(this);\r\n    this.formatValue = this.formatValue.bind(this)\r\n  }\r\n\r\n  formatValue(){\r\n    if (this.props.type !== 'color' && isNaN(this.props.value) === false){\r\n      return (parseFloat(this.props.value).toFixed(1))\r\n    }\r\n  }\r\n\r\n  handleMouseDown(e) {\r\n    this.props.handleDraftConnection(this.props.id);\r\n  }\r\n  \r\n  handleMouseUp(e) {\r\n    this.props.handleDraftConnectionDrop(this.props.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li className='socket' data-type={this.props.type}>\r\n        <span onMouseDown={this.handleMouseDown} onMouseUp={this.handleMouseDp} className='socket--plug'></span>\r\n        <span className='socket--label'>{this.props.label}: {this.formatValue()}</span>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Socket from './Socket.js';\r\n\r\nexport default class NumberNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dragging: false\r\n        }\r\n\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleDraftConection = this.handleDraftConection.bind(this)\r\n        this.handleDraftConectionDrop = this.handleDraftConectionDrop.bind(this)\r\n    }\r\n\r\n    handleClose(){\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    handleChange(e) {\r\n        let v = parseFloat(e.target.value)\r\n        if (isNaN(v)){v = 0}\r\n        this.props.updateOutput(this.props.id, 0, v)\r\n        this.props.update(this.props.id)\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    handleDraftConection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConectionDrop(socketID) {\r\n        this.props.finishDraftConection(this.props.id, socketID)\r\n    }\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket key={socket.id} id={socket.id} finishDraftConectionDrop={this.handleDraftConectionDrop} handleDraftConnection={this.handleDraftConection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>\r\n                    <span>{this.props.title}</span>\r\n                    <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                    Close</button>\r\n                </header>\r\n                <div className='node-body'>\r\n                    <input type='number' value={this.props.outputs[0].value} onChange={this.handleChange}></input>\r\n                </div>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Socket from './Socket.js'\r\n\r\nexport default class DisplayNode extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dragging: false\r\n        }\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this);\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleClose = this.handleClose.bind(this)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n    handleClose() {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket handleDraftConnectionDrop={this.handleDraftConnectionDrop} key={socket.id} id={socket.id} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node' key={this.props.id} style={nodeCSS} >\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>Display\r\n                <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                        Close</button>\r\n                </header>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n                <div className='node-body'>\r\n                    <h2>{parseFloat(this.props.inputs[0].value).toFixed(2)}</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","// This is called Math but it just adds two inputs\r\nimport React from 'react'\r\nimport Socket from './Socket.js';\r\nexport default class MathNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.solve = this.solve.bind(this)\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this)\r\n        this.handleSelect = this.handleSelect.bind(this)\r\n        this.handleDraftConnection = this.handleDraftConnection.bind(this)\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleClose = this.handleClose.bind(this);\r\n\r\n        this.state = {\r\n            operation: 'add'\r\n        }\r\n    }\r\n\r\n    handleClose() {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    solve() {\r\n        let a = parseFloat(this.props.inputs[0].value);\r\n        let b = parseFloat(this.props.inputs[1].value);\r\n        let result = 0;\r\n        // y(t) = A sin (2PI f t + ro) where:\r\n        // A - Amplitude\r\n        // f - Frequency\r\n        // ro - Phase\r\n        if (isNaN(a) === false && isNaN(b) === false){\r\n            if (this.state.operation === 'add') { result = a + b; }\r\n            if (this.state.operation === 'subtract') { result = a - b; }\r\n            if (this.state.operation === 'multiply') { result = a * b; }\r\n            if (this.state.operation === 'divide' && b !== 0) { result = a / b; }\r\n            if (this.state.operation === 'average') { result = ((a + b) / 2); }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    handleSelect(e) {\r\n        this.setState({ operation: e.target.value })\r\n    }\r\n\r\n    handleDraftConnection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let outputValue = this.solve();\r\n        if (this.props.outputs[0].value !== outputValue) {\r\n            this.props.updateOutput(this.props.id, 0, outputValue)\r\n            this.props.updateNodes(this.props.id);\r\n        }\r\n    }\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket handleDraftConnectionDrop={this.handleDraftConnectionDrop} key={socket.id} id={socket.id} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket key={socket.id} id={socket.id} finishDraftConectionDrop={this.handleDraftConectionDrop} handleDraftConnection={this.handleDraftConnection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node' style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>Math\r\n                <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                        Close</button>\r\n                </header>\r\n                <div className='node-body'>\r\n                    <select value={this.state.operation} onChange={this.handleSelect}>\r\n                        <option value='add'>Add</option>\r\n                        <option value='subtract'>Subtract</option>\r\n                        <option value='multiply'>Multiply</option>\r\n                        <option value='divide'>Divide</option>\r\n                        <option value='average'>Average</option>\r\n                    </select>\r\n                </div>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Socket from './Socket.js'\r\n\r\nexport default class PenNode extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dragging: false\r\n        }\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this);\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this)\r\n        this.solve = this.solve.bind(this)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n    solve() {\r\n        let r = this.props.inputs[0].value\r\n        if (r < 0){r = 0}\r\n        let newPen = {\r\n            radius: r,\r\n            fill: this.props.inputs[1].value\r\n        };\r\n        return newPen;\r\n    }\r\n    componentDidUpdate() {\r\n        let newPen = this.solve();\r\n        if (this.props.pen.radius !== newPen.radius ||\r\n            this.props.pen.fill !== newPen.fill) {\r\n            this.props.updatePen(newPen)\r\n        }\r\n    }\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket type={socket.type} key={socket.id} id={socket.id} handleDraftConnectionDrop={this.handleDraftConnectionDrop} handleDraftConnection={this.handleDraftConnection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node permanent' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>{this.props.title}</header>\r\n                <div className='node-body'>\r\n                </div>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Socket from './Socket.js';\r\n\r\nexport default class NumberNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dragging: false\r\n        }\r\n\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleDraftConection = this.handleDraftConection.bind(this)\r\n        this.handleDraftConectionDrop = this.handleDraftConectionDrop.bind(this)\r\n\r\n    }\r\n\r\n    handleClose(e){\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        let d = this.props.drawingData.distance;\r\n        let x = this.props.drawingData.x;\r\n        let y = this.props.drawingData.y;\r\n\r\n        if (isNaN(x)){x = 0}\r\n        if (isNaN(y)){y = 0}\r\n\r\n        if (d !== this.props.outputs[0].value){\r\n            this.props.updateOutput(this.props.id, 0, d)\r\n            this.props.update(this.props.id)\r\n        }\r\n        if (x !== this.props.outputs[1].value){\r\n            this.props.updateOutput(this.props.id, 1, x)\r\n            this.props.update(this.props.id)\r\n        }\r\n         if (y !== this.props.outputs[2].value){\r\n             this.props.updateOutput(this.props.id, 2, y)\r\n             this.props.update(this.props.id)\r\n         }\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    handleDraftConection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConectionDrop(socketID) {\r\n        this.props.finishDraftConection(this.props.id, socketID)\r\n    }\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket type={socket.type} key={socket.id} id={socket.id} finishDraftConectionDrop={this.handleDraftConectionDrop} handleDraftConnection={this.handleDraftConection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node permanent' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>\r\n                    <span>{this.props.title}</span>\r\n                </header>\r\n                <div className='node-body'>\r\n                </div>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Socket from './Socket.js';\r\nimport * as utils from './utils.js';\r\n\r\nexport default class NumberNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dragging: false\r\n        }\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleDraftConnection = this.handleDraftConnection.bind(this)\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this)\r\n    }\r\n\r\n    handleClose(e) {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    handleChange(e) {\r\n        let v = e.target.value\r\n        this.props.updateOutput(this.props.id, 0, v)\r\n        this.props.update(this.props.id)\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    solve() {\r\n        let r = parseFloat(this.props.inputs[0].value);\r\n        let g = parseFloat(this.props.inputs[1].value);\r\n        let b = parseFloat(this.props.inputs[2].value);\r\n\r\n        if (r > 255){r = 255}\r\n        if (g > 255){g = 255}\r\n        if (b > 255){b = 255}\r\n\r\n        return [r, g, b];\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        let outputValue = this.solve();\r\n        if (utils.compareArrays(this.props.outputs[0].value, outputValue) === false) {\r\n            this.props.updateOutput(this.props.id, 0, outputValue)\r\n            this.props.updateNodes(this.props.id);\r\n        }\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    handleDraftConnection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket handleDraftConnectionDrop={this.handleDraftConnectionDrop} key={socket.id} id={socket.id} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket type={socket.type} key={socket.id} id={socket.id} finishDraftConnectionDrop={this.handleDraftConnectionDrop} handleDraftConnection={this.handleDraftConnection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>\r\n                    <span>{this.props.title}</span>\r\n                    <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                        Close</button>\r\n                </header>\r\n                <div className='node-body'>\r\n                </div>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Socket from './Socket.js';\r\n\r\nexport default class NumberNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dragging: false\r\n        }\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleDraftConnection = this.handleDraftConnection.bind(this)\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this)\r\n    }\r\n\r\n    handleClose(e) {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    handleChange(e) {\r\n        let v = e.target.value\r\n        this.props.updateOutput(this.props.id, 0, v)\r\n        this.props.update(this.props.id)\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    solve() {\r\n        let rgb = this.props.inputs[0].value;\r\n        return [rgb[0], rgb[1], rgb[2]];\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        let outputValue = this.solve();\r\n        if (this.props.outputs[0].value !== outputValue[0] ||\r\n            this.props.outputs[1].value !== outputValue[1] ||\r\n            this.props.outputs[2].value !== outputValue[2]) {\r\n            \r\n                this.props.updateOutput(this.props.id, 0, outputValue[0])\r\n            this.props.updateOutput(this.props.id, 1, outputValue[1])\r\n            this.props.updateOutput(this.props.id, 2, outputValue[2])\r\n            this.props.updateNodes(this.props.id);\r\n        }\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    handleDraftConnection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket type={socket.type} handleDraftConnectionDrop={this.handleDraftConnectionDrop} key={socket.id} id={socket.id} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket type={socket.type} key={socket.id} id={socket.id} finishDraftConnectionDrop={this.handleDraftConnectionDrop} handleDraftConnection={this.handleDraftConnection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>\r\n                    <span>{this.props.title}</span>\r\n                    <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                        Close</button>\r\n                </header>\r\n                <div className='node-body'>\r\n                </div>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Socket from './Socket.js';\r\nimport * as utils from './utils.js';\r\n\r\nexport default class NumberNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dragging: false\r\n        }\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleDraftConnection = this.handleDraftConnection.bind(this)\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this)\r\n        this.formatOutput = this.formatOutput.bind(this)\r\n    }\r\n\r\n    handleClose(e) {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    handleChange(e) {\r\n        let v = e.target.value;\r\n        let _rgb = utils.hexToRGB(v);\r\n        let rgb = [_rgb.r, _rgb.g, _rgb.b]\r\n        this.props.updateOutput(this.props.id, 0, rgb)\r\n        this.props.update(this.props.id)\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    handleDraftConnection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    formatOutput(){\r\n        let hex = utils.rgbToHex(this.props.outputs[0].value)\r\n        return hex\r\n    }\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket handleDraftConnectionDrop={this.handleDraftConnectionDrop} key={socket.id} id={socket.id} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket type={socket.type} key={socket.id} id={socket.id} finishDraftConnectionDrop={this.handleDraftConnectionDrop} handleDraftConnection={this.handleDraftConnection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>\r\n                    <span>{this.props.title}</span>\r\n                    <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                        Close</button>\r\n                </header>\r\n                <div className='node-body'>\r\n                    <input type='color' onChange={this.handleChange} value={this.formatOutput()}></input>\r\n                </div>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Socket from './Socket.js';\r\n\r\nexport default class NumberNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dragging: false,\r\n            operation: 'sine'\r\n        }\r\n\r\n        this.c = null;\r\n        this.canvasRef = React.createRef();\r\n\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleSelect = this.handleSelect.bind(this)\r\n        this.handleDraftConnection = this.handleDraftConnection.bind(this)\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this)\r\n        this.solve = this.solve.bind(this);\r\n        this.drawWave = this.drawWave.bind(this)\r\n\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this);\r\n    }\r\n\r\n    handleClose(e) {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    handleSelect(e) {\r\n        this.setState({ operation: e.target.value })\r\n    }\r\n\r\n    handleChange(e) {\r\n        let v = this.solve()\r\n        this.props.updateOutput(this.props.id, 0, v)\r\n        this.props.update(this.props.id)\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    handleDraftConnection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.c = this.canvasRef.current.getContext('2d')\r\n        this.c.fillCircle = function (x, y, r) {\r\n            this.beginPath();\r\n            this.arc(x, y, r, 0, 2 * Math.PI, false);\r\n            this.fill();\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.drawWave()\r\n        //        let outputValue = this.solve(this.c.canvas.width / 2);\r\n        let outputValue = this.solve(this.c.canvas.width / 2);\r\n        if (this.props.outputs[0].value !== outputValue) {\r\n            this.props.updateOutput(this.props.id, 0, outputValue)\r\n            this.props.updateNodes(this.props.id);\r\n        }\r\n    }\r\n\r\n    sgn(n) {\r\n        if (n > 0) { return 1 }\r\n        if (n === 0) { return 0 }\r\n        if (n < 0) { return -1 }\r\n    }\r\n\r\n    solve(t) {\r\n        let a = this.props.inputs[0].value;\r\n        let f = this.props.inputs[1].value;\r\n        let ro = this.props.inputs[2].value;\r\n        let p = 1 / f;\r\n\r\n        function cotan(x) { return 1 / Math.tan(x); }\r\n        if (this.state.operation === 'sine') {\r\n            return a * Math.sin((2 * Math.PI) * f * t + ro);\r\n        }\r\n\r\n        if (this.state.operation === 'triangle') {\r\n            a *= .65;\r\n            return a * Math.asin(Math.sin(((2 * Math.PI) / p) * t + ro));\r\n        }\r\n        if (this.state.operation === 'square') {\r\n            return a * this.sgn(Math.sin((2 * Math.PI) * f * t + ro));\r\n        }\r\n        if (this.state.operation === 'sawtooth') {\r\n            return (-2 * a) / Math.PI * Math.atan(cotan((t * Math.PI) / p + ro / 2));\r\n        }\r\n\r\n    }\r\n\r\n    drawWave() {\r\n        const resolution = .1;\r\n\r\n        this.c.clearRect(0, 0, this.c.canvas.width, this.c.canvas.height)\r\n        this.c.fillStyle = 'lightgray';\r\n        for (let i = 0; i < 15; i++) { this.c.fillRect(20 * i + 15, 0, 1, this.props.height) }\r\n        for (let i = 0; i < 15; i++) { this.c.fillRect(0, 20 * i + 15, this.props.width, 1) }\r\n\r\n        this.c.fillStyle = 'black';\r\n\r\n        this.c.fillCircle(this.c.canvas.width / 2, this.solve(this.c.canvas.width / 2) * -1 + 60, 3)\r\n        this.c.fillRect(0, 60, this.c.canvas.width, 1)\r\n\r\n        this.c.beginPath();\r\n        this.c.moveTo(0, 60)\r\n\r\n        for (let x = 0; x < this.c.canvas.width; x += resolution) {\r\n            let y = this.solve(x) * -1;\r\n            this.c.lineTo(x, y + 60)\r\n        }\r\n        this.c.lineWidth = 1.5;\r\n        this.c.stroke();\r\n        this.c.closePath()\r\n    }\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket handleDraftConnectionDrop={this.handleDraftConnectionDrop} key={socket.id} id={socket.id} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket key={socket.id} id={socket.id} finishDraftConnectionDrop={this.handleDraftConnectionDrop} handleDraftConnection={this.handleDraftConnection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>\r\n                    <span>{this.props.title}</span>\r\n                    <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                        Close</button>\r\n                </header>\r\n                <div className='node-body'>\r\n                    <canvas className='wave--canvas' ref={this.canvasRef} height={this.props.height - 140} width={this.props.width - 20}>\r\n                    </canvas>\r\n                    <select value={this.state.operation} onChange={this.handleSelect}>\r\n                        <option value='sine'>Sine</option>\r\n                        <option value='square'>Square</option>\r\n                        <option value='triangle'>Triangle</option>\r\n                        <option value='sawtooth'>Sawtooth</option>\r\n                    </select>\r\n                </div>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import * as  equal from 'fast-deep-equal';\r\nimport React from 'react'\r\nimport Socket from './Socket.js';\r\nimport * as utils from './utils.js';\r\nimport './css/RampNode.css'\r\n\r\nexport default class NumberNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dragging: false,  // should be a prop\r\n            draggingStopIndex: null,\r\n            cachedValue: [0, 0, 0],\r\n            stops: [\r\n                { position: 0.0, color: '#ff3300', picker: React.createRef() },\r\n                { position: 1.0, color: '#aabbcc', picker: React.createRef() }\r\n            ]\r\n        }\r\n\r\n        this.c = null;\r\n        this.canvasRef = React.createRef();\r\n\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleDraftConnection = this.handleDraftConnection.bind(this)\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this)\r\n        this.solve = this.solve.bind(this);\r\n        this.drawGradient = this.drawGradient.bind(this)\r\n        this.handleStopColorChange = this.handleStopColorChange.bind(this)\r\n        this.handleStopMouseDown = this.handleStopMouseDown.bind(this)\r\n        this.handleStopMouseUp = this.handleStopMouseUp.bind(this)\r\n        this.handleStopDrag = this.handleStopDrag.bind(this)\r\n        this.addStop = this.addStop.bind(this)\r\n        this.removeStop = this.removeStop.bind(this)\r\n        this.triggerColorPicker = this.triggerColorPicker.bind(this)\r\n\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this);\r\n    }\r\n\r\n    handleClose() {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    handleChange() {\r\n        let v = this.solve()\r\n        this.props.updateOutput(this.props.id, 0, v)\r\n        this.props.update(this.props.id)\r\n    }\r\n\r\n    drawGradient() {\r\n        let gradient = this.c.createLinearGradient(0, 0, this.props.width - 20, 0);\r\n\r\n        this.state.stops.forEach((stop) => {\r\n            gradient.addColorStop(stop.position, stop.color);\r\n        })\r\n\r\n        this.c.fillStyle = gradient;\r\n        this.c.fillRect(0, 0, this.c.canvas.width, this.c.canvas.height);\r\n        this.c.fillStyle = 'black';\r\n\r\n        let v = this.props.inputs[0].value;\r\n\r\n        if (v < 0) {\r\n            v = 0\r\n        } else if (v > 1) {\r\n            v = 1\r\n        };\r\n\r\n\r\n        this.c.fillRect(v * this.c.canvas.width, 12, 1, this.c.canvas.height);\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    handleStopColorChange(e) {\r\n        let index = e.target.dataset.index;\r\n        let value = e.target.value;\r\n        this.setState((prevState) => {\r\n            prevState.stops[index].color = value\r\n            return prevState;\r\n        })\r\n    }\r\n    handleStopMouseDown(e, index) {\r\n        e.stopPropagation();\r\n        this.setState({ draggingStopIndex: index })\r\n    }\r\n    handleStopMouseUp(e) {\r\n        e.stopPropagation();\r\n        this.setState({ draggingStopIndex: null })\r\n    }\r\n\r\n    addStop(e) {\r\n        let x = (e.clientX - this.props.x - 14) / (this.c.canvas.width - 12);\r\n        let imageData = this.c.getImageData(x, 1, 1, 1).data;\r\n        let c = utils.rgbToHex([imageData[0], imageData[1], imageData[2]])\r\n        if (x > 1) { x = 1 }\r\n        if (x < 0) { x = 0 }\r\n\r\n        this.setState((prevState) => {\r\n            prevState.stops.push({ position: x, color: c, picker: React.createRef() })\r\n            return prevState;\r\n        })\r\n    }\r\n\r\n    triggerColorPicker(e, index) {\r\n        e.stopPropagation()\r\n        this.state.stops[index].picker.current.click()\r\n    }\r\n\r\n    removeStop(e, index) {\r\n        e.stopPropagation();\r\n        this.setState((prevState) => {\r\n            prevState.stops.splice(index, 1)\r\n            return prevState;\r\n        })\r\n    }\r\n\r\n    handleStopDrag(e) {\r\n        let x = (e.clientX - this.props.x - 14) / (this.c.canvas.width - 12);\r\n        if (x > 1) { x = 1 }\r\n        if (x < 0) { x = 0 }\r\n        if (this.state.draggingStopIndex !== null) {\r\n            this.setState((prevState) => {\r\n                prevState.stops[this.state.draggingStopIndex].position = x;\r\n                return prevState;\r\n            })\r\n        }\r\n    }\r\n\r\n    handleDraftConnection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.c = this.canvasRef.current.getContext('2d')\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        this.drawGradient()\r\n        let outputValue = this.solve();\r\n        if (utils.compareArrays(this.props.outputs[0].value, outputValue) === false) {\r\n            this.props.updateOutput(this.props.id, 0, outputValue)\r\n            this.props.updateNodes(this.props.id);\r\n        }\r\n    }\r\n    handleInputMouseUp(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    solve() {\r\n        let v = this.props.inputs[0].value;\r\n        if (v > 1) { v = 1 };\r\n        if (v < 0) { v = 0 };\r\n\r\n        let x = (v * this.c.canvas.width)\r\n        let imageData = this.c.getImageData(x, 1, 1, 1).data;\r\n        return [imageData[0], imageData[1], imageData[2]]\r\n    }\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket handleDraftConnectionDrop={this.handleDraftConnectionDrop} key={socket.id} id={socket.id} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket key={socket.id} id={socket.id} finishDraftConnectionDrop={this.handleDraftConnectionDrop} handleDraftConnection={this.handleDraftConnection} value={socket.value} type={socket.type} label={socket.label}></Socket>\r\n        );\r\n        const stops = this.state.stops.map((stop, index) => {\r\n            let stopCSS = {\r\n                left: `${stop.position * 100}%`,\r\n            }\r\n            let indicatorCSS = {\r\n                background: `${stop.color}`,\r\n            }\r\n\r\n            return (\r\n                <li key={index} style={stopCSS} className='gradient--stop ' data-dragging={stop.dragging}>\r\n                    <div onMouseDown={(e) => { this.handleStopMouseDown(e, index) }} onMouseUp={(e) => { this.handleStopMouseUp(e) }} onClick={(e) => { e.stopPropagation() }} style={indicatorCSS} data-index={index} className='stop--indicator'></div>\r\n                    <div className='stop--controls'>\r\n                        <button onClick={(e) => { this.triggerColorPicker(e, index) }} className='stop--edit'>\r\n                            <svg viewBox=\"0 0 24 24\">\r\n                                <path fill=\"#000000\" d=\"M20.71,4.04C21.1,3.65 21.1,3 20.71,2.63L18.37,0.29C18,-0.1 17.35,-0.1 16.96,0.29L15,2.25L18.75,6M17.75,7L14,3.25L4,13.25V17H7.75L17.75,7Z\" />\r\n                            </svg>\r\n                        </button>\r\n                        <button className='stop--remove' onClick={(e) => this.removeStop(e, index)}>\r\n                            <svg viewBox=\"0 0 24 24\">\r\n                                <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                    <input onClick={(e) => { e.stopPropagation() }} ref={stop.picker} type='color' data-index={index} value={stop.color} onChange={this.handleStopColorChange}></input>\r\n                </li>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div onMouseUp={this.handleStopMouseUp} data-dragging={this.state.dragging} className='node' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>\r\n                    <span>{this.props.title}</span>\r\n                    <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                        Close</button>\r\n                </header>\r\n                <div className='node-body'>\r\n                    <div className='gradient'>\r\n                        <canvas ref={this.canvasRef} width={this.props.width - 20 + 'px'} height='80' className='gradient--canvas'></canvas>\r\n                        <ul className='gradient--stops' onClick={this.addStop} onMouseMove={this.handleStopDrag}>\r\n                            {stops}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default class NumberNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dragging: false\r\n        }\r\n\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n    }\r\n\r\n    handleClose(){\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>\r\n                    <span>{this.props.title}</span>\r\n                    <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                    Close</button>\r\n                </header>\r\n                <div className='node-body'>\r\n                    <p>Node Paint is an experimental drawing tool designed and built by Max Kohler.</p>\r\n                    <p>Right-click to add nodes.</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default class Connection extends React.Component {\r\n    generatePath(x1, y1, x2, y2) {\r\n        let pathOffset = 40;\r\n        let path = `M ${x1} ${y1} C${x1 + pathOffset} ${y1}, ${x2 - pathOffset} ${y2}, ${x2} ${y2}`;\r\n       // let path = `M ${x1} ${y1} L${x2} ${y2}`;\r\n        return path;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <path  d={this.generatePath(this.props.x1,this.props.y1,this.props.x2,this.props.y2)} />\r\n        )\r\n    }\r\n}","export default {\r\n    contextMenu: {\r\n        isOpen: false,\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    draftConnection: {\r\n        isActive: false,\r\n        from: { nodeID: 0, socket: 0 }\r\n    },\r\n    mouse: {\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    drag: {\r\n        isActive: false,\r\n        nodeIndex: null\r\n    },\r\n    nodes: [\r\n        {\r\n            type: 'rgbPicker',\r\n            title: 'Color Picker',\r\n            id: '1',\r\n            x: 60,\r\n            y: 540,\r\n            width: 160,\r\n            height: 80,\r\n            inputs: [],\r\n            outputs: [\r\n                { label: 'Color', value: [0,0,0], id: 1, type: 'color' }\r\n            ]\r\n        },\r\n        {\r\n            type: 'pen',\r\n            title: 'Pen Output',\r\n            id: 'pen',\r\n            x: 300,\r\n            y: 400,\r\n            width: 160,\r\n            height: 80,\r\n            inputs: [\r\n                { label: 'Radius', value: 0, id: 0 },\r\n                { label: 'Fill', value: 0, id: 1, type: 'color' }\r\n            ]\r\n        },\r\n        {\r\n            type: 'data',\r\n            title: 'Drawing Info',\r\n            id: 'data',\r\n            x: 60,\r\n            y: 250,\r\n            width: 160,\r\n            height: 90,\r\n            outputs: [\r\n                { label: 'Distance', value: 0, id: 0, type: '' },\r\n                { label: 'Pen X', value: 0, id: 1, type: '' },\r\n                { label: 'Pen Y', value: 0, id: 2, type: '' }\r\n            ]\r\n        },\r\n    ],\r\n    connections: [\r\n        {from: {nodeID: 'data', socket: 0}, to: {nodeID: 'pen', socket: 0}},\r\n        {from: {nodeID: '1', socket: 0}, to: {nodeID: 'pen', socket: 1}},\r\n    ]\r\n}","import React from 'react';\r\nimport './css/menu.css';\r\n\r\nexport default class ContextMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    handleClick(e) {\r\n        this.props.addNode(e.target.getAttribute('data-value'))\r\n    }\r\n    render() {\r\n        const menuCSS = {\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n\r\n        return (\r\n            <ul className='menu' style={menuCSS}>\r\n                <li className='menu--item header'>Basic</li>\r\n                <li className='menu--item'><button data-value='number' onClick={this.handleClick}>Number</button></li>\r\n                <li className='menu--item'><button data-value='display' onClick={this.handleClick}>Display</button></li>\r\n                <li className='menu--item'><button data-value='math' onClick={this.handleClick}>Math</button></li>\r\n                <li className='menu--item'><button data-value='wave' onClick={this.handleClick}>Wave</button></li>\r\n                \r\n                <li className='menu--item header'>Colour</li>\r\n                <li className='menu--item'><button data-value='rgbSplit' onClick={this.handleClick}>Split RGB</button></li>\r\n                <li className='menu--item'><button data-value='rgbCombine' onClick={this.handleClick}>Combine RGB</button></li>\r\n                <li className='menu--item'><button data-value='rgbPicker' onClick={this.handleClick}>Colour Picker</button></li>\r\n                <li className='menu--item'><button data-value='ramp' onClick={this.handleClick}>Colour Ramp</button></li>\r\n            </ul>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport * as utils from './utils.js';\r\nimport NumberNode from './NumberNode.js'\r\nimport DisplayNode from './DisplayNode.js'\r\nimport MathNode from './MathNode.js'\r\nimport PenNode from './PenNode'\r\nimport DataNode from './DataNode.js'\r\nimport RGBNode from './RGBNode.js'\r\nimport RGBSplitNode from './RGBSplitNode.js'\r\nimport RGBPickerNode from './RGBPickerNode.js'\r\nimport WaveNode from './WaveNode.js'\r\nimport RampNode from './RampNode.js'\r\nimport InfoNode from './InfoNode.js'\r\n\r\nimport Connection from './Connection.js'\r\nimport testState from './testState.js'\r\nimport ContextMenu from './ContextMenu.js'\r\nimport makeNode from './makeNode.js'\r\n\r\nexport default class NodeContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.updateNodes = this.updateNodes.bind(this)\r\n        this.getNodeByID = this.getNodeByID.bind(this)\r\n        this.updateOutput = this.updateOutput.bind(this)\r\n        this.addNode = this.addNode.bind(this)\r\n        this.removeNode = this.removeNode.bind(this)\r\n        this.handleMouseMove = this.handleMouseMove.bind(this)\r\n        this.handleContextMenu = this.handleContextMenu.bind(this)\r\n        this.startDraftConnection = this.startDraftConnection.bind(this)\r\n        this.finishDraftConnection = this.finishDraftConnection.bind(this)\r\n        this.handleMouseUp = this.handleMouseUp.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.componentDidMount = this.componentDidMount.bind(this)\r\n        this.state = testState;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState((prevState) => {\r\n            return prevState;\r\n        })\r\n    }\r\n\r\n    addNode(type) {\r\n        this.setState((prevState) => {\r\n            prevState.nodes.push(makeNode(type, this.state.contextMenu.x, this.state.contextMenu.y))\r\n            prevState.contextMenu.isOpen = false;\r\n            return prevState;\r\n        })\r\n    }\r\n    removeNode(nodeID) {\r\n        let index = this.getNodeByID(nodeID);\r\n        if (index !== false) {\r\n            this.setState((prevState) => {\r\n                // Find affected connections and remove them\r\n                prevState.connections = prevState.connections.filter(c => {\r\n                    if (c.from.nodeID === nodeID || c.to.nodeID === nodeID) {\r\n                        return false\r\n                    }\r\n                    return true;\r\n                })\r\n\r\n                prevState.nodes.splice(index, 1)\r\n                return prevState;\r\n            })\r\n\r\n        }\r\n    }\r\n    startDraftConnection(nodeID, socket) {\r\n        this.setState({\r\n            draftConnection: {\r\n                isActive: true,\r\n                from: { nodeID: nodeID, socket: socket }\r\n            }\r\n        })\r\n    }\r\n\r\n    isConnectionValid(proposedConnection) {\r\n        return true;\r\n    }\r\n\r\n    finishDraftConnection(nodeID, socket) {\r\n        let proposedConnection = {\r\n            from: { nodeID: this.state.draftConnection.from.nodeID, socket: this.state.draftConnection.from.socket },\r\n            to: { nodeID: nodeID, socket: socket },\r\n            id: Math.random()\r\n        }\r\n        if (this.isConnectionValid(proposedConnection)) {\r\n            this.setState((prevState) => {\r\n                // Clear any previous connections\r\n                for (let i = 0; i < this.state.connections.length; i++) {\r\n                    let c = this.state.connections[i];\r\n                    if (c.to.nodeID === proposedConnection.to.nodeID &&\r\n                        c.to.socket === proposedConnection.to.socket) {\r\n                        prevState.connections.splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n                prevState.connections.push(proposedConnection)\r\n                return prevState;\r\n            }, () => this.updateNodes(proposedConnection.from.nodeID))\r\n            // updateNodes() in a callback because setState() is async\r\n\r\n        }\r\n    }\r\n\r\n    handleDragStart(nodeID) {\r\n        let dragIndex = this.getNodeByID(nodeID);\r\n        this.setState({\r\n            drag: {\r\n                isActive: true,\r\n                nodeIndex: dragIndex\r\n            }\r\n        })\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            drag: {\r\n                isActive: false,\r\n                nodeIndex: null\r\n            }\r\n        })\r\n    }\r\n\r\n    handleMouseMove(e) {\r\n        let deltaX = e.clientX - this.state.mouse.x;\r\n        let deltaY = e.clientY - this.state.mouse.y;\r\n        this.setState({\r\n            mouse: {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                deltaX: deltaX,\r\n                deltaY: deltaY,\r\n            }\r\n        }, function () {\r\n\r\n            if (utils.distance(this.state.mouse.x, this.state.mouse.y, this.state.contextMenu.x, this.state.contextMenu.y) > 200 && this.state.contextMenu.isOpen === true) {\r\n                this.setState({ contextMenu: { isActive: false } })\r\n            }\r\n\r\n            if (this.state.drag.isActive) {\r\n                this.setState((prevState) => {\r\n                    prevState.nodes[this.state.drag.nodeIndex].x += this.state.mouse.deltaX\r\n                    prevState.nodes[this.state.drag.nodeIndex].y += this.state.mouse.deltaY\r\n                    return prevState;\r\n                })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    handleMouseUp(e) {\r\n        if (this.state.draftConnection.isActive === true) {\r\n            this.setState({\r\n                draftConnection: { isActive: false }\r\n            })\r\n        }\r\n\r\n        if (this.state.drag.isActive === true) {\r\n            this.setState({\r\n                drag: { isActive: false }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleContextMenu(e) {\r\n        e.preventDefault()\r\n        this.setState({\r\n            contextMenu: {\r\n                isOpen: true,\r\n                x: e.clientX,\r\n                y: e.clientY\r\n            }\r\n        })\r\n    }\r\n\r\n    getNodeByID(id) {\r\n        for (let i = 0; i < this.state.nodes.length; i++) {\r\n            if (this.state.nodes[i].id === id) {\r\n                return i;\r\n            }\r\n        }\r\n        console.error(`Node with ID ${id} could not be found.`)\r\n        return false;\r\n    }\r\n\r\n    updateOutput(nodeID, outputIndex, newValue) {\r\n        const nodeIndex = this.getNodeByID(nodeID);\r\n        this.setState((prevState) => {\r\n            prevState.nodes[nodeIndex].outputs[outputIndex].value = newValue;\r\n            return prevState;\r\n        })\r\n    }\r\n    updateNodes(id) {\r\n\r\n        // We're going top-down\r\n        // Find every node that's connected to this one's outputs\r\n        // We're passing the origin node.\r\n        // Then all subsequent nodes call this method themselves \r\n\r\n        //console.log(`Running update from node ID ${id}.`);\r\n\r\n        let relevantConnections = []\r\n        for (let i = 0; i < this.state.connections.length; i++) {\r\n            let c = this.state.connections[i];\r\n            if (c.from.nodeID === id) {\r\n                relevantConnections.push(c)\r\n            }\r\n        }\r\n\r\n        //console.log(`Found ${relevantConnections.length} subsequent nodes.`);\r\n        for (let i = 0; i < relevantConnections.length; i++) {\r\n\r\n            const rc = relevantConnections[i];\r\n            const toIndex = this.getNodeByID(rc.to.nodeID);\r\n            const fromIndex = this.getNodeByID(rc.from.nodeID);\r\n\r\n            this.setState((prevState) => {\r\n                prevState.nodes[toIndex].inputs[rc.to.socket].value = prevState.nodes[fromIndex].outputs[rc.from.socket].value;\r\n                return prevState;\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const connectionItems = this.state.connections.map(function (c, i) {\r\n            let toIndex = this.getNodeByID(c.to.nodeID)\r\n            let fromIndex = this.getNodeByID(c.from.nodeID)\r\n            let x1 = this.state.nodes[fromIndex].x + this.state.nodes[fromIndex].width;\r\n            let y1 = (this.state.nodes[fromIndex].y + this.state.nodes[fromIndex].height) - ((this.state.nodes[fromIndex].outputs.length - c.from.socket) * 17);\r\n\r\n            let x2 = this.state.nodes[toIndex].x;\r\n            let y2 = (this.state.nodes[toIndex].y + this.state.nodes[toIndex].height) - ((this.state.nodes[toIndex].inputs.length - c.to.socket) * 17);\r\n\r\n            return (<Connection key={`connection-${i}`} x1={x1} y1={y1} x2={x2} y2={y2}></Connection>)\r\n        }, this)\r\n\r\n        const nodeItems = this.state.nodes.map(function (node) {\r\n            if (node.type === 'number') {\r\n                return <NumberNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} updateOutput={this.updateOutput} update={this.updateNodes} outputs={node.outputs} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></NumberNode>\r\n            } else if (node.type === 'data') {\r\n                return <DataNode drawingData={this.props.drawingData} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} outputs={node.outputs} update={this.updateNodes} updateOutput={this.updateOutput} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></DataNode>\r\n\r\n            } else if (node.type === 'display') {\r\n                return <DisplayNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} inputs={node.inputs} update={this.updateNodes} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></DisplayNode>\r\n            } else if (node.type === 'math') {\r\n                return <MathNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} inputs={node.inputs} outputs={node.outputs} updateOutput={this.updateOutput} updateNodes={this.updateNodes} width={node.width} height={node.height} x={node.x} y={node.y} id={node.id} key={node.id} title={node.title}></MathNode>\r\n            } else if (node.type === 'pen') {\r\n                return <PenNode pen={this.props.pen} updatePen={this.props.updatePen} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} updateOutput={this.updateOutput} update={this.updateNodes} inputs={node.inputs} outputs={node.outputs} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></PenNode>\r\n            } else if (node.type === 'rgbCombine') {\r\n                return <RGBNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} updateNodes={this.updateNodes} updateOutput={this.updateOutput} update={this.updateNodes} outputs={node.outputs} inputs={node.inputs} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></RGBNode>\r\n\r\n            } else if (node.type === 'rgbPicker') {\r\n                return <RGBPickerNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} updateNodes={this.updateNodes} updateOutput={this.updateOutput} update={this.updateNodes} outputs={node.outputs} inputs={node.inputs} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></RGBPickerNode>\r\n\r\n            } else if (node.type === 'rgbSplit') {\r\n                return <RGBSplitNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} updateNodes={this.updateNodes} updateOutput={this.updateOutput} update={this.updateNodes} outputs={node.outputs} inputs={node.inputs} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></RGBSplitNode>\r\n            } else if (node.type === 'wave') {\r\n                return <WaveNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} updateNodes={this.updateNodes} updateOutput={this.updateOutput} update={this.updateNodes} outputs={node.outputs} inputs={node.inputs} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></WaveNode>\r\n            } else if (node.type === 'ramp') {\r\n                return <RampNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} updateNodes={this.updateNodes} updateOutput={this.updateOutput} update={this.updateNodes} outputs={node.outputs} inputs={node.inputs} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></RampNode>\r\n            } else if (node.type === 'info') {\r\n                return <InfoNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></InfoNode>\r\n            }\r\n            return false;\r\n        }, this);\r\n\r\n        let contextMenu = '';\r\n        if (this.state.contextMenu.isOpen) {\r\n            contextMenu = <ContextMenu addNode={this.addNode} x={this.state.contextMenu.x} y={this.state.contextMenu.y}></ContextMenu>\r\n        }\r\n\r\n        let draftConnection = '';\r\n        if (this.state.draftConnection.isActive) {\r\n            let fromNode = this.state.nodes[this.getNodeByID(this.state.draftConnection.from.nodeID)]\r\n            let x1 = fromNode.x + fromNode.width;\r\n            let y1 = fromNode.y + fromNode.height - ((fromNode.outputs.length - this.state.draftConnection.from.socket) * 17);\r\n            draftConnection = <Connection key={\"draftconnection-0\"} x1={x1} y1={y1} x2={this.state.mouse.x} y2={this.state.mouse.y}></Connection>\r\n        }\r\n\r\n        return (\r\n            <div className='nodeContainer panel' onMouseUp={this.handleMouseUp} onMouseMove={this.handleMouseMove} onContextMenu={this.handleContextMenu}>\r\n                < svg width={this.props.width + 'px'} height={this.props.height + 'px'} >\r\n                    {connectionItems}\r\n                    {draftConnection}\r\n                </svg>\r\n                {contextMenu}\r\n                {nodeItems}\r\n            </div >\r\n        )\r\n    }\r\n}","export default function makeNode(type, x, y) {\r\n    let node = {\r\n        type: type,\r\n        title: 'New Node',\r\n        id: Math.random().toFixed(5),\r\n        x: x,\r\n        y: y,\r\n        width: 250,\r\n        height: 100,\r\n        outputs: [],\r\n        inputs: []\r\n    }\r\n\r\n    if (type === 'number') {\r\n        node.title = 'Number'\r\n        node.width = 180;\r\n        node.outputs.push({ label: 'Value', value: 0, id: 0 })\r\n    }\r\n    if (type === 'math') {\r\n        node.title = 'Math';\r\n        node.height = 130;\r\n        node.width = 210;\r\n        node.outputs.push({ label: 'Output', value: 0, id: 0 })\r\n        node.inputs.push({ label: 'Input A', value: 0, id: 0 })\r\n        node.inputs.push({ label: 'Input B', value: 0, id: 1 })\r\n    }\r\n    if (type === 'display') {\r\n        node.title = 'Display'\r\n        node.width = 120\r\n        node.height = 90\r\n        node.inputs.push({ label: 'Input', value: 0, id: 0 })\r\n    }\r\n    \r\n    if (type === 'rgbCombine') {\r\n        node.title = 'Combine RGB'\r\n        node.width = 140\r\n        node.inputs.push({ label: 'R', value: 0, id: 0 })\r\n        node.inputs.push({ label: 'G', value: 0, id: 1 })\r\n        node.inputs.push({ label: 'B', value: 0, id: 2 })\r\n        node.outputs.push({ label: 'Color', value: 0, id: 0, type: 'color' })\r\n    }\r\n    if (type === 'rgbSplit') {\r\n        node.title = 'Split RGB'\r\n        node.width = 140\r\n        node.inputs.push({ label: 'Color', value: 0, id: 0, type: 'color' }) \r\n        node.outputs.push({ label: 'R', value: 0, id: 0 })\r\n        node.outputs.push({ label: 'G', value: 0, id: 1 })\r\n        node.outputs.push({ label: 'B', value: 0, id: 2 })\r\n    }\r\n    if (type === 'rgbPicker') {\r\n        node.title = 'Color Picker'\r\n        node.width = 140\r\n        node.outputs.push({ label: 'Color', type: 'color', value: [123,32,255], id: 0 })\r\n    }\r\n\r\n    if (type === 'pen') {\r\n        node.title = 'Pen'\r\n        node.inputs.push({ label: 'Radius', value: 0, id: 0 })\r\n        node.inputs.push({ label: 'Colour', value: 0, id: 1 })\r\n    }\r\n    \r\n    if (type === 'wave') {\r\n        node.title = 'Wave'\r\n        node.height = 260;\r\n        node.inputs.push({ label: 'Amplitude', value: 0, id: '0' });\r\n        node.inputs.push({ label: 'Frequency', value: 0, id: '1' });\r\n        node.inputs.push({ label: 'Phase', value: 0, id: '2' });\r\n        node.outputs.push({ label: 'Value', value: 0, id: '0' });\r\n    }\r\n    \r\n    if (type === 'ramp') {\r\n        node.title = 'Color Ramp'\r\n        node.height = 200;\r\n        node.inputs.push({ label: 'Position', value: 0.5, id: '0' }); \r\n        node.outputs.push({ label: 'Color', value: [0,0,0], id: '0', type: 'color' });\r\n    }\r\n\r\n    return node;\r\n\r\n}","import React from 'react';\r\nimport * as utils from './utils.js';\r\n\r\nexport default class Canvas extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isDrawing: false\r\n    }\r\n\r\n    this.canvasRef = React.createRef();\r\n    this.c = null;\r\n\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleMouseUp = this.handleMouseUp.bind(this);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    this.clear = this.clear.bind(this);\r\n    this.resetData = this.resetData.bind(this);\r\n    this.saveImage = this.saveImage.bind(this)\r\n  }\r\n  componentDidMount() {\r\n    this.c = this.canvasRef.current.getContext('2d');\r\n    this.c.fillCircle = function (x, y, r) {\r\n      this.beginPath();\r\n      this.arc(x, y, r, 0, 2 * Math.PI, false);\r\n      this.fill();\r\n    };\r\n  }\r\n  handleMouseMove(e) {\r\n    if (this.state.isDrawing) {\r\n      this.props.updateDrawingData({\r\n        distance: this.props.drawingData.distance + 1,\r\n        speed: 0,\r\n        x: e.clientX - this.props.width,\r\n        y: e.clientY\r\n      })\r\n\r\n      let x = e.clientX - this.props.width\r\n      let y = e.clientY;\r\n      this.c.fillStyle = utils.formatRGB(this.props.pen.fill);\r\n      this.c.fillCircle(x, y, this.props.pen.radius)\r\n    }\r\n  }\r\n  handleMouseDown(e) {\r\n    this.setState({ isDrawing: true })\r\n    this.props.updateDrawingData({\r\n      distance: this.props.drawingData.distance + 1,\r\n      speed: 0,\r\n      x: e.clientX,\r\n      y: e.clientY - this.props.height\r\n    })\r\n    let x = e.clientX\r\n    let y = e.clientY - this.props.height;\r\n    this.c.fillStyle = utils.formatRGB(this.props.pen.fill);\r\n    this.c.fillCircle(x, y, this.props.pen.radius)\r\n  }\r\n  handleMouseUp() {\r\n    this.setState({ isDrawing: false })\r\n  }\r\n  clear() {\r\n    this.c.clearRect(0, 0, this.props.width, this.props.height)\r\n  }\r\n  saveImage(e) {\r\n    this.c.canvas.toBlob((blob) => {\r\n      let URLObj = window.URL || window.webkitURL;\r\n      let a = document.createElement(\"a\");\r\n      a.href = URLObj.createObjectURL(blob);\r\n      a.download = \"untitled.png\";\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n    });\r\n  }\r\n  resetData() {\r\n    this.props.updateDrawingData({\r\n      distance: 0,\r\n      speed: 0,\r\n      area: 0,\r\n      x: 0,\r\n      y: 0\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='canvas panel'>\r\n        <div className='panel--menu'>\r\n          <button onClick={this.resetData}>Reset</button>\r\n          <button onClick={this.clear}>Clear</button>\r\n          <button onClick={this.saveImage}>Save</button>\r\n        </div>\r\n        <canvas height={this.props.height} width={this.props.width} ref={this.canvasRef} onMouseMove={this.handleMouseMove} onMouseDown={this.handleMouseDown} onMouseUp={this.handleMouseUp} className='world'></canvas>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport NodeContainer from './NodeContainer';\r\nimport Canvas from './Canvas';\r\n\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      width: 0,\r\n      height: 0,\r\n      pen: {\r\n        radius: 0,\r\n        fill: [0, 0, 0],\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      drawingData: {\r\n        speed: 0,\r\n        distance: 0,\r\n        area: 0\r\n      }\r\n    }\r\n\r\n    this.updatePen = this.updatePen.bind(this)\r\n    this.updateDrawingData = this.updateDrawingData.bind(this)\r\n  }\r\n\r\n  updatePen(newPen) {\r\n    this.setState({\r\n      pen: {\r\n        x: newPen.x,\r\n        y: newPen.y,\r\n        radius: newPen.radius,\r\n        fill: newPen.fill\r\n      }\r\n    })\r\n  }\r\n  updateDrawingData(newData) {\r\n    this.setState({\r\n      drawingData: newData\r\n    })\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({ height: window.innerHeight, width: window.innerWidth });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <header className='app--header'>\r\n          <h1>Node Paint</h1>\r\n          <a href='https://www.maxkoehler.com/work/node-paint/'>Info</a>\r\n        </header>\r\n        <NodeContainer drawingData={this.state.drawingData} pen={this.state.pen} updatePen={this.updatePen} width={this.state.width * .5} height={this.state.height}></NodeContainer>\r\n        <div className='divider'></div>\r\n        <Canvas drawingData={this.state.drawingData} updateDrawingData={this.updateDrawingData} width={this.state.width / 2} height={this.state.height} pen={this.state.pen}></Canvas>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// if (module.hot) {\r\n//     module.hot.accept();\r\n// }\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}