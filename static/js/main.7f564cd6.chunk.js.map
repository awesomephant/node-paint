{"version":3,"sources":["utils.js","Socket.js","NumberNode.js","DisplayNode.js","MathNode.js","PenNode.js","DataNode.js","RGBNode.js","RGBSplitNode.js","RGBPickerNode.js","WaveNode.js","RampNode.js","InfoNode.js","Connection.js","testState.js","ContextMenu.js","makeNode.js","NodeContainer.js","Canvas.js","App.js","serviceWorker.js","index.js"],"names":["formatRGB","rgb","concat","compareArrays","a","b","length","i","rgbToHex","r","g","componentToHex","c","hex","toString","Socket","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMouseDown","bind","assertThisInitialized","handleMouseDp","handleMouseUp","formatValue","type","isNaN","value","parseFloat","toFixed","e","handleDraftConnection","id","handleDraftConnectionDrop","react_default","createElement","className","data-type","onMouseDown","onMouseUp","label","React","Component","NumberNode","state","dragging","handleClose","handleChange","handleDragStart","handleDragEnd","handleDraftConection","handleDraftConectionDrop","removeNode","v","target","updateOutput","update","setState","socketID","startDraftConnection","finishDraftConection","_this2","nodeCSS","width","height","transform","x","y","outputs","map","socket","Socket_Socket","key","finishDraftConectionDrop","data-dragging","style","title","onClick","viewBox","d","onChange","DisplayNode","finishDraftConnection","inputs","MathNode","solve","componentDidUpdate","handleSelect","operation","result","prevProps","outputValue","updateNodes","PenNode","radius","fill","newPen","pen","updatePen","drawingData","distance","utils","finishDraftConnectionDrop","formatOutput","_rgb","exec","parseInt","console","log","canvasRef","createRef","drawWave","componentDidMount","current","getContext","fillCircle","beginPath","arc","Math","PI","canvas","n","t","f","ro","p","sin","asin","sgn","atan","tan","clearRect","fillStyle","fillRect","moveTo","lineTo","lineWidth","stroke","closePath","ref","draggingStopIndex","stops","position","color","picker","drawGradient","handleStopColorChange","handleStopMouseDown","handleStopMouseUp","handleStopDrag","addStop","removeStop","triggerColorPicker","gradient","createLinearGradient","forEach","stop","addColorStop","index","dataset","prevState","stopPropagation","clientX","imageData","getImageData","data","push","click","splice","preventDefault","_this3","stopCSS","left","indicatorCSS","background","data-index","onMouseMove","Connection","x1","y1","x2","y2","generatePath","testState","contextMenu","isOpen","draftConnection","isActive","from","nodeID","mouse","drag","nodeIndex","nodes","connections","ContextMenu","handleClick","addNode","getAttribute","menuCSS","data-value","makeNode","node","random","NodeContainer","getNodeByID","handleMouseMove","handleContextMenu","filter","to","proposedConnection","isConnectionValid","dragIndex","deltaX","deltaY","clientY","_this4","sqrt","pow","error","outputIndex","newValue","_this5","relevantConnections","_loop","rc","toIndex","fromIndex","connectionItems","Connection_Connection","nodeItems","NumberNode_NumberNode","DataNode_NumberNode","DisplayNode_DisplayNode","MathNode_MathNode","PenNode_PenNode","RGBNode_NumberNode","RGBPickerNode_NumberNode","RGBSplitNode_NumberNode","WaveNode_NumberNode","RampNode_NumberNode","InfoNode_NumberNode","ContextMenu_ContextMenu","fromNode","onContextMenu","Canvas","isDrawing","clear","resetData","saveImage","updateDrawingData","speed","toBlob","blob","URLObj","window","URL","webkitURL","document","href","createObjectURL","download","body","appendChild","removeChild","area","App","newData","innerHeight","innerWidth","NodeContainer_NodeContainer","Canvas_Canvas","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f564cd6.chunk.js","sourcesContent":["export function distance(x1, y1, x2, y2) {\r\n    return Math.sqrt(Math.pow((x1 - x2), 2) - Math.pow((y1 - y2), 2));\r\n}\r\n\r\nexport function formatRGB(rgb) {\r\n    return `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`\r\n}\r\n\r\nexport function compareArrays(a, b) {\r\n    if (a.length !== b.length) { return false }\r\n    for (let i = 0; i < a.length; i++) {\r\n        if (a[i] !== b[i]) {\r\n            return false\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function rgbToHex(rgb) {\r\n    const r = rgb[0]\r\n    const g = rgb[1]\r\n    const b = rgb[2]\r\n\r\n    function componentToHex(c) {\r\n        var hex = c.toString(16);\r\n        return hex.length === 1 ? \"0\" + hex : hex;\r\n    }\r\n    return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\nexport function hexToRGB(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n      r: parseInt(result[1], 16),\r\n      g: parseInt(result[2], 16),\r\n      b: parseInt(result[3], 16)\r\n    } : null;\r\n  }\r\n  ","import React from 'react';\r\n\r\nexport default class Socket extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleMouseDp = this.handleMouseUp.bind(this);\r\n    this.formatValue = this.formatValue.bind(this)\r\n  }\r\n\r\n  formatValue(){\r\n    if (this.props.type !== 'color' && isNaN(this.props.value) === false){\r\n      return (parseFloat(this.props.value).toFixed(1))\r\n    }\r\n  }\r\n\r\n  handleMouseDown(e) {\r\n    this.props.handleDraftConnection(this.props.id);\r\n  }\r\n  \r\n  handleMouseUp(e) {\r\n    this.props.handleDraftConnectionDrop(this.props.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li className='socket' data-type={this.props.type}>\r\n        <span onMouseDown={this.handleMouseDown} onMouseUp={this.handleMouseDp} className='socket--plug'></span>\r\n        <span className='socket--label'>{this.props.label}: {this.formatValue()}</span>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Socket from './Socket.js';\r\n\r\nexport default class NumberNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dragging: false\r\n        }\r\n\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleDraftConection = this.handleDraftConection.bind(this)\r\n        this.handleDraftConectionDrop = this.handleDraftConectionDrop.bind(this)\r\n    }\r\n\r\n    handleClose(){\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    handleChange(e) {\r\n        let v = parseFloat(e.target.value)\r\n        if (isNaN(v)){v = 0}\r\n        this.props.updateOutput(this.props.id, 0, v)\r\n        this.props.update(this.props.id)\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    handleDraftConection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConectionDrop(socketID) {\r\n        this.props.finishDraftConection(this.props.id, socketID)\r\n    }\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket key={socket.id} id={socket.id} finishDraftConectionDrop={this.handleDraftConectionDrop} handleDraftConnection={this.handleDraftConection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>\r\n                    <span>{this.props.title}</span>\r\n                    <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                    Close</button>\r\n                </header>\r\n                <div className='node-body'>\r\n                    <input type='number' value={this.props.outputs[0].value} onChange={this.handleChange}></input>\r\n                </div>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Socket from './Socket.js'\r\n\r\nexport default class DisplayNode extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dragging: false\r\n        }\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this);\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleClose = this.handleClose.bind(this)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n    handleClose() {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket handleDraftConnectionDrop={this.handleDraftConnectionDrop} key={socket.id} id={socket.id} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node' key={this.props.id} style={nodeCSS} >\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>Display\r\n                <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                        Close</button>\r\n                </header>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n                <div className='node-body'>\r\n                    <h2>{parseFloat(this.props.inputs[0].value).toFixed(2)}</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","// This is called Math but it just adds two inputs\r\nimport React from 'react'\r\nimport Socket from './Socket.js';\r\nexport default class MathNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.solve = this.solve.bind(this)\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this)\r\n        this.handleSelect = this.handleSelect.bind(this)\r\n        this.handleDraftConnection = this.handleDraftConnection.bind(this)\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleClose = this.handleClose.bind(this);\r\n\r\n        this.state = {\r\n            operation: 'add'\r\n        }\r\n    }\r\n\r\n    handleClose() {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    solve() {\r\n        let a = parseFloat(this.props.inputs[0].value);\r\n        let b = parseFloat(this.props.inputs[1].value);\r\n        let result = 0;\r\n        // y(t) = A sin (2PI f t + ro) where:\r\n        // A - Amplitude\r\n        // f - Frequency\r\n        // ro - Phase\r\n\r\n        if (this.state.operation === 'add') { result = a + b; }\r\n        if (this.state.operation === 'subtract') { result = a - b; }\r\n        if (this.state.operation === 'multiply') { result = a * b; }\r\n        if (this.state.operation === 'divide' && b !== 0) { result = a / b; }\r\n        if (this.state.operation === 'average') { result = ((a + b) / 2); }\r\n\r\n        return result;\r\n    }\r\n\r\n    handleSelect(e) {\r\n        this.setState({ operation: e.target.value })\r\n    }\r\n\r\n    handleDraftConnection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let outputValue = this.solve();\r\n        if (this.props.outputs[0].value !== outputValue) {\r\n            this.props.updateOutput(this.props.id, 0, outputValue)\r\n            this.props.updateNodes(this.props.id);\r\n        }\r\n    }\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket handleDraftConnectionDrop={this.handleDraftConnectionDrop} key={socket.id} id={socket.id} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket key={socket.id} id={socket.id} finishDraftConectionDrop={this.handleDraftConectionDrop} handleDraftConnection={this.handleDraftConnection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node' style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>Math\r\n                <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                        Close</button>\r\n                </header>\r\n                <div className='node-body'>\r\n                    <select value={this.state.operation} onChange={this.handleSelect}>\r\n                        <option value='add'>Add</option>\r\n                        <option value='subtract'>Subtract</option>\r\n                        <option value='multiply'>Multiply</option>\r\n                        <option value='divide'>Divide</option>\r\n                        <option value='average'>Average</option>\r\n                    </select>\r\n                </div>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Socket from './Socket.js'\r\n\r\nexport default class PenNode extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dragging: false\r\n        }\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this);\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this)\r\n        this.solve = this.solve.bind(this)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n    solve() {\r\n        let r = this.props.inputs[0].value\r\n        if (r < 0){r = 0}\r\n        let newPen = {\r\n            radius: r,\r\n            fill: this.props.inputs[1].value\r\n        };\r\n        return newPen;\r\n    }\r\n    componentDidUpdate() {\r\n        let newPen = this.solve();\r\n        if (this.props.pen.radius !== newPen.radius ||\r\n            this.props.pen.fill !== newPen.fill) {\r\n            this.props.updatePen(newPen)\r\n        }\r\n    }\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket type={socket.type} key={socket.id} id={socket.id} handleDraftConnectionDrop={this.handleDraftConnectionDrop} handleDraftConnection={this.handleDraftConnection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node permanent' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>{this.props.title}</header>\r\n                <div className='node-body'>\r\n                </div>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Socket from './Socket.js';\r\n\r\nexport default class NumberNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dragging: false\r\n        }\r\n\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleDraftConection = this.handleDraftConection.bind(this)\r\n        this.handleDraftConectionDrop = this.handleDraftConectionDrop.bind(this)\r\n\r\n    }\r\n\r\n    handleClose(e){\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        let d = this.props.drawingData.distance;\r\n        let x = this.props.drawingData.x;\r\n        let y = this.props.drawingData.y;\r\n\r\n        if (isNaN(x)){x = 0}\r\n        if (isNaN(y)){y = 0}\r\n\r\n        if (d !== this.props.outputs[0].value){\r\n            this.props.updateOutput(this.props.id, 0, d)\r\n            this.props.update(this.props.id)\r\n        }\r\n        if (x !== this.props.outputs[1].value){\r\n            this.props.updateOutput(this.props.id, 1, x)\r\n            this.props.update(this.props.id)\r\n        }\r\n         if (y !== this.props.outputs[2].value){\r\n             this.props.updateOutput(this.props.id, 2, y)\r\n             this.props.update(this.props.id)\r\n         }\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    handleDraftConection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConectionDrop(socketID) {\r\n        this.props.finishDraftConection(this.props.id, socketID)\r\n    }\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket type={socket.type} key={socket.id} id={socket.id} finishDraftConectionDrop={this.handleDraftConectionDrop} handleDraftConnection={this.handleDraftConection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node permanent' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>\r\n                    <span>{this.props.title}</span>\r\n                </header>\r\n                <div className='node-body'>\r\n                </div>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Socket from './Socket.js';\r\nimport * as utils from './utils.js';\r\n\r\nexport default class NumberNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dragging: false\r\n        }\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleDraftConnection = this.handleDraftConnection.bind(this)\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this)\r\n    }\r\n\r\n    handleClose(e) {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    handleChange(e) {\r\n        let v = e.target.value\r\n        this.props.updateOutput(this.props.id, 0, v)\r\n        this.props.update(this.props.id)\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    solve() {\r\n        let r = parseFloat(this.props.inputs[0].value);\r\n        let g = parseFloat(this.props.inputs[1].value);\r\n        let b = parseFloat(this.props.inputs[2].value);\r\n\r\n        if (r > 255){r = 255}\r\n        if (g > 255){g = 255}\r\n        if (b > 255){b = 255}\r\n\r\n        return [r, g, b];\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        let outputValue = this.solve();\r\n        if (utils.compareArrays(this.props.outputs[0].value, outputValue) === false) {\r\n            this.props.updateOutput(this.props.id, 0, outputValue)\r\n            this.props.updateNodes(this.props.id);\r\n        }\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    handleDraftConnection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket handleDraftConnectionDrop={this.handleDraftConnectionDrop} key={socket.id} id={socket.id} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket type={socket.type} key={socket.id} id={socket.id} finishDraftConnectionDrop={this.handleDraftConnectionDrop} handleDraftConnection={this.handleDraftConnection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>\r\n                    <span>{this.props.title}</span>\r\n                    <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                        Close</button>\r\n                </header>\r\n                <div className='node-body'>\r\n                </div>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Socket from './Socket.js';\r\n\r\nexport default class NumberNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dragging: false\r\n        }\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleDraftConnection = this.handleDraftConnection.bind(this)\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this)\r\n    }\r\n\r\n    handleClose(e) {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    handleChange(e) {\r\n        let v = e.target.value\r\n        this.props.updateOutput(this.props.id, 0, v)\r\n        this.props.update(this.props.id)\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    solve() {\r\n        let rgb = this.props.inputs[0].value;\r\n        return [rgb[0], rgb[1], rgb[2]];\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        let outputValue = this.solve();\r\n        if (this.props.outputs[0].value !== outputValue[0] ||\r\n            this.props.outputs[1].value !== outputValue[1] ||\r\n            this.props.outputs[2].value !== outputValue[2]) {\r\n            \r\n                this.props.updateOutput(this.props.id, 0, outputValue[0])\r\n            this.props.updateOutput(this.props.id, 1, outputValue[1])\r\n            this.props.updateOutput(this.props.id, 2, outputValue[2])\r\n            this.props.updateNodes(this.props.id);\r\n        }\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    handleDraftConnection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket type={socket.type} handleDraftConnectionDrop={this.handleDraftConnectionDrop} key={socket.id} id={socket.id} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket type={socket.type} key={socket.id} id={socket.id} finishDraftConnectionDrop={this.handleDraftConnectionDrop} handleDraftConnection={this.handleDraftConnection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>\r\n                    <span>{this.props.title}</span>\r\n                    <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                        Close</button>\r\n                </header>\r\n                <div className='node-body'>\r\n                </div>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Socket from './Socket.js';\r\nimport * as utils from './utils.js';\r\n\r\nexport default class NumberNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dragging: false\r\n        }\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleDraftConnection = this.handleDraftConnection.bind(this)\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this)\r\n        this.formatOutput = this.formatOutput.bind(this)\r\n    }\r\n\r\n    handleClose(e) {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    handleChange(e) {\r\n        let v = e.target.value;\r\n        let _rgb = utils.hexToRGB(v);\r\n        let rgb = [_rgb.r, _rgb.g, _rgb.b]\r\n        this.props.updateOutput(this.props.id, 0, rgb)\r\n        this.props.update(this.props.id)\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    handleDraftConnection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    formatOutput(){\r\n        let hex = utils.rgbToHex(this.props.outputs[0].value)\r\n        console.log(hex)\r\n        return hex\r\n    }\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket handleDraftConnectionDrop={this.handleDraftConnectionDrop} key={socket.id} id={socket.id} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket type={socket.type} key={socket.id} id={socket.id} finishDraftConnectionDrop={this.handleDraftConnectionDrop} handleDraftConnection={this.handleDraftConnection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>\r\n                    <span>{this.props.title}</span>\r\n                    <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                        Close</button>\r\n                </header>\r\n                <div className='node-body'>\r\n                    <input type='color' onChange={this.handleChange} value={this.formatOutput()}></input>\r\n                </div>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Socket from './Socket.js';\r\n\r\nexport default class NumberNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dragging: false,\r\n            operation: 'sine'\r\n        }\r\n\r\n        this.c = null;\r\n        this.canvasRef = React.createRef();\r\n\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleSelect = this.handleSelect.bind(this)\r\n        this.handleDraftConnection = this.handleDraftConnection.bind(this)\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this)\r\n        this.solve = this.solve.bind(this);\r\n        this.drawWave = this.drawWave.bind(this)\r\n\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this);\r\n    }\r\n\r\n    handleClose(e) {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    handleSelect(e) {\r\n        this.setState({ operation: e.target.value })\r\n    }\r\n\r\n    handleChange(e) {\r\n        let v = this.solve()\r\n        this.props.updateOutput(this.props.id, 0, v)\r\n        this.props.update(this.props.id)\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    handleDraftConnection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.c = this.canvasRef.current.getContext('2d')\r\n        this.c.fillCircle = function (x, y, r) {\r\n            this.beginPath();\r\n            this.arc(x, y, r, 0, 2 * Math.PI, false);\r\n            this.fill();\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.drawWave()\r\n        //        let outputValue = this.solve(this.c.canvas.width / 2);\r\n        let outputValue = this.solve(this.c.canvas.width / 2);\r\n        if (this.props.outputs[0].value !== outputValue) {\r\n            this.props.updateOutput(this.props.id, 0, outputValue)\r\n            this.props.updateNodes(this.props.id);\r\n        }\r\n    }\r\n\r\n    sgn(n) {\r\n        if (n > 0) { return 1 }\r\n        if (n === 0) { return 0 }\r\n        if (n < 0) { return -1 }\r\n    }\r\n\r\n    solve(t) {\r\n        let a = this.props.inputs[0].value;\r\n        let f = this.props.inputs[1].value;\r\n        let ro = this.props.inputs[2].value;\r\n        let p = 1 / f;\r\n\r\n        function cotan(x) { return 1 / Math.tan(x); }\r\n        if (this.state.operation === 'sine') {\r\n            return a * Math.sin((2 * Math.PI) * f * t + ro);\r\n        }\r\n\r\n        if (this.state.operation === 'triangle') {\r\n            a *= .65;\r\n            return a * Math.asin(Math.sin(((2 * Math.PI) / p) * t + ro));\r\n        }\r\n        if (this.state.operation === 'square') {\r\n            return a * this.sgn(Math.sin((2 * Math.PI) * f * t + ro));\r\n        }\r\n        if (this.state.operation === 'sawtooth') {\r\n            return (-2 * a) / Math.PI * Math.atan(cotan((t * Math.PI) / p + ro / 2));\r\n        }\r\n\r\n    }\r\n\r\n    drawWave() {\r\n        const resolution = .1;\r\n\r\n        this.c.clearRect(0, 0, this.c.canvas.width, this.c.canvas.height)\r\n        this.c.fillStyle = 'lightgray';\r\n        for (let i = 0; i < 15; i++) { this.c.fillRect(20 * i + 15, 0, 1, this.props.height) }\r\n        for (let i = 0; i < 15; i++) { this.c.fillRect(0, 20 * i + 15, this.props.width, 1) }\r\n\r\n        this.c.fillStyle = 'black';\r\n\r\n        this.c.fillCircle(this.c.canvas.width / 2, this.solve(this.c.canvas.width / 2) * -1 + 60, 3)\r\n        this.c.fillRect(0, 60, this.c.canvas.width, 1)\r\n\r\n        this.c.beginPath();\r\n        this.c.moveTo(0, 60)\r\n\r\n        for (let x = 0; x < this.c.canvas.width; x += resolution) {\r\n            let y = this.solve(x) * -1;\r\n            this.c.lineTo(x, y + 60)\r\n        }\r\n        this.c.lineWidth = 1.5;\r\n        this.c.stroke();\r\n        this.c.closePath()\r\n    }\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket handleDraftConnectionDrop={this.handleDraftConnectionDrop} key={socket.id} id={socket.id} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket key={socket.id} id={socket.id} finishDraftConnectionDrop={this.handleDraftConnectionDrop} handleDraftConnection={this.handleDraftConnection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>\r\n                    <span>{this.props.title}</span>\r\n                    <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                        Close</button>\r\n                </header>\r\n                <div className='node-body'>\r\n                    <canvas className='wave--canvas' ref={this.canvasRef} height={this.props.height - 140} width={this.props.width - 20}>\r\n                    </canvas>\r\n                    <select value={this.state.operation} onChange={this.handleSelect}>\r\n                        <option value='sine'>Sine</option>\r\n                        <option value='square'>Square</option>\r\n                        <option value='triangle'>Triangle</option>\r\n                        <option value='sawtooth'>Sawtooth</option>\r\n                    </select>\r\n                </div>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Socket from './Socket.js';\r\nimport * as utils from './utils.js';\r\nimport './css/RampNode.css'\r\n\r\nexport default class NumberNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dragging: false,  // should be a prop\r\n\r\n            draggingStopIndex: null,\r\n            stops: [\r\n                { position: 0.0, color: '#ff33aa', picker: React.createRef() },\r\n                { position: 1.0, color: '#aabbcc', picker: React.createRef() }\r\n            ]\r\n        }\r\n\r\n        this.c = null;\r\n        this.canvasRef = React.createRef();\r\n\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleDraftConnection = this.handleDraftConnection.bind(this)\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this)\r\n        this.solve = this.solve.bind(this);\r\n        this.drawGradient = this.drawGradient.bind(this)\r\n        this.handleStopColorChange = this.handleStopColorChange.bind(this)\r\n        this.handleStopMouseDown = this.handleStopMouseDown.bind(this)\r\n        this.handleStopMouseUp = this.handleStopMouseUp.bind(this)\r\n        this.handleStopDrag = this.handleStopDrag.bind(this)\r\n        this.addStop = this.addStop.bind(this)\r\n        this.removeStop = this.removeStop.bind(this)\r\n        this.triggerColorPicker = this.triggerColorPicker.bind(this)\r\n\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this);\r\n    }\r\n\r\n    handleClose(e) {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    handleChange(e) {\r\n        let v = this.solve()\r\n        this.props.updateOutput(this.props.id, 0, v)\r\n        this.props.update(this.props.id)\r\n    }\r\n\r\n    drawGradient() {\r\n        let gradient = this.c.createLinearGradient(0, 0, this.props.width - 20, 0);\r\n\r\n        this.state.stops.forEach((stop) => {\r\n            gradient.addColorStop(stop.position, stop.color);\r\n        })\r\n\r\n        this.c.fillStyle = gradient;\r\n        this.c.fillRect(0, 0, this.c.canvas.width, this.c.canvas.height);\r\n        this.c.fillStyle = 'black';\r\n\r\n        let v = this.props.inputs[0].value;\r\n\r\n        if (v < 0) {\r\n            v = 0\r\n        } else if (v > 1) {\r\n            v = 1\r\n        };\r\n\r\n\r\n        this.c.fillRect(v * this.c.canvas.width, 12, 1, this.c.canvas.height);\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    handleStopColorChange(e) {\r\n        let index = e.target.dataset.index;\r\n        let value = e.target.value;\r\n        this.setState((prevState) => {\r\n            prevState.stops[index].color = value\r\n            return prevState;\r\n        })\r\n    }\r\n    handleStopMouseDown(e, index) {\r\n        e.stopPropagation();\r\n        this.setState({ draggingStopIndex: index })\r\n    }\r\n    handleStopMouseUp(e) {\r\n        e.stopPropagation();\r\n        this.setState({ draggingStopIndex: null })\r\n    }\r\n\r\n    addStop(e) {\r\n        let x = (e.clientX - this.props.x - 14) / (this.c.canvas.width - 12);\r\n        let imageData = this.c.getImageData(x, 1, 1, 1).data;\r\n        let c = utils.rgbToHex([imageData[0], imageData[1], imageData[2]])\r\n        if (x > 1) { x = 1 }\r\n        if (x < 0) { x = 0 }\r\n\r\n        this.setState((prevState) => {\r\n            prevState.stops.push({ position: x, color: c, picker: React.createRef() })\r\n            return prevState;\r\n        })\r\n    }\r\n\r\n    triggerColorPicker(e, index) {\r\n        e.stopPropagation()\r\n        this.state.stops[index].picker.current.click()\r\n    }\r\n\r\n    removeStop(e, index) {\r\n        e.stopPropagation();\r\n        this.setState((prevState) => {\r\n            prevState.stops.splice(index, 1)\r\n            return prevState;\r\n        })\r\n    }\r\n\r\n    handleStopDrag(e) {\r\n        let x = (e.clientX - this.props.x - 14) / (this.c.canvas.width - 12);\r\n        if (x > 1) { x = 1 }\r\n        if (x < 0) { x = 0 }\r\n        if (this.state.draggingStopIndex !== null) {\r\n            this.setState((prevState) => {\r\n                prevState.stops[this.state.draggingStopIndex].position = x;\r\n                return prevState;\r\n            })\r\n        }\r\n    }\r\n\r\n    handleDraftConnection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.c = this.canvasRef.current.getContext('2d')\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.drawGradient()\r\n        let outputValue = this.solve();\r\n\r\n        if (utils.compareArrays(this.props.outputs[0].value, outputValue) === false) {\r\n            this.props.updateOutput(this.props.id, 0, outputValue)\r\n            this.props.updateNodes(this.props.id);\r\n        }\r\n    }\r\n    handleInputMouseUp(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    solve() {\r\n        let v = this.props.inputs[0].value;\r\n        if (v > 1) { v = 1 };\r\n        if (v < 0) { v = 0 };\r\n\r\n        let x = (v * this.c.canvas.width)\r\n        let imageData = this.c.getImageData(x, 1, 1, 1).data;\r\n        return [imageData[0], imageData[1], imageData[2]]\r\n    }\r\n\r\n    render() {\r\n\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket handleDraftConnectionDrop={this.handleDraftConnectionDrop} key={socket.id} id={socket.id} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket key={socket.id} id={socket.id} finishDraftConnectionDrop={this.handleDraftConnectionDrop} handleDraftConnection={this.handleDraftConnection} value={socket.value} type={socket.type} label={socket.label}></Socket>\r\n        );\r\n        const stops = this.state.stops.map((stop, index) => {\r\n            let stopCSS = {\r\n                left: `${stop.position * 100}%`,\r\n            }\r\n            let indicatorCSS = {\r\n                background: `${stop.color}`,\r\n            }\r\n\r\n            return (\r\n                <li key={index} style={stopCSS} className='gradient--stop ' data-dragging={stop.dragging}>\r\n                    <div onMouseDown={(e) => { this.handleStopMouseDown(e, index) }} onMouseUp={(e) => { this.handleStopMouseUp(e) }} onClick={(e) => { e.stopPropagation() }} style={indicatorCSS} data-index={index} className='stop--indicator'></div>\r\n                    <div className='stop--controls'>\r\n                        <button onClick={(e) => { this.triggerColorPicker(e, index) }} className='stop--edit'>\r\n                            <svg viewBox=\"0 0 24 24\">\r\n                                <path fill=\"#000000\" d=\"M20.71,4.04C21.1,3.65 21.1,3 20.71,2.63L18.37,0.29C18,-0.1 17.35,-0.1 16.96,0.29L15,2.25L18.75,6M17.75,7L14,3.25L4,13.25V17H7.75L17.75,7Z\" />\r\n                            </svg>\r\n                        </button>\r\n                        <button className='stop--remove' onClick={(e) => this.removeStop(e, index)}>\r\n                            <svg viewBox=\"0 0 24 24\">\r\n                                <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                    <input onClick={(e) => { e.stopPropagation() }} ref={stop.picker} type='color' data-index={index} value={stop.color} onChange={this.handleStopColorChange}></input>\r\n                </li>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div onMouseUp={this.handleStopMouseUp} data-dragging={this.state.dragging} className='node' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>\r\n                    <span>{this.props.title}</span>\r\n                    <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                        Close</button>\r\n                </header>\r\n                <div className='node-body'>\r\n                    <div className='gradient'>\r\n                        <canvas ref={this.canvasRef} width={this.props.width - 20 + 'px'} height='80' className='gradient--canvas'></canvas>\r\n                        <ul className='gradient--stops' onClick={this.addStop} onMouseMove={this.handleStopDrag}>\r\n                            {stops}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default class NumberNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dragging: false\r\n        }\r\n\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n    }\r\n\r\n    handleClose(){\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>\r\n                    <span>{this.props.title}</span>\r\n                    <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                    Close</button>\r\n                </header>\r\n                <div className='node-body'>\r\n                    <p>Node Paint is an experimental drawing tool designed and built by Max Kohler.</p>\r\n                    <p>Right-click to add nodes.</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default class Connection extends React.Component {\r\n    generatePath(x1, y1, x2, y2) {\r\n        let pathOffset = 40;\r\n        let path = `M ${x1} ${y1} C${x1 + pathOffset} ${y1}, ${x2 - pathOffset} ${y2}, ${x2} ${y2}`;\r\n       // let path = `M ${x1} ${y1} L${x2} ${y2}`;\r\n        return path;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <path  d={this.generatePath(this.props.x1,this.props.y1,this.props.x2,this.props.y2)} />\r\n        )\r\n    }\r\n}","export default {\r\n    contextMenu: {\r\n        isOpen: false,\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    draftConnection: {\r\n        isActive: false,\r\n        from: { nodeID: 0, socket: 0 }\r\n    },\r\n    mouse: {\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    drag: {\r\n        isActive: false,\r\n        nodeIndex: null\r\n    },\r\n    nodes: [\r\n        {\r\n            type: 'pen',\r\n            title: 'Pen Output',\r\n            id: 'pen',\r\n            x: 960,\r\n            y: 500,\r\n            width: 160,\r\n            height: 80,\r\n            inputs: [\r\n                { label: 'Radius', value: 35, id: 0 },\r\n                { label: 'Fill', value: 0, id: 1, type: 'color' }\r\n            ]\r\n        },\r\n        {\r\n            type: 'data',\r\n            title: 'Drawing Info',\r\n            id: 'data',\r\n            x: 60,\r\n            y: 70,\r\n            width: 160,\r\n            height: 90,\r\n            outputs: [\r\n                { label: 'Distance', value: 0, id: 0, type: '' },\r\n                { label: 'Pen X', value: 0, id: 1, type: '' },\r\n                { label: 'Pen Y', value: 0, id: 2, type: '' }\r\n            ]\r\n        },\r\n    ],\r\n    connections: [\r\n    ]\r\n}","import React from 'react';\r\nimport './css/menu.css';\r\n\r\nexport default class ContextMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    handleClick(e) {\r\n        this.props.addNode(e.target.getAttribute('data-value'))\r\n    }\r\n    render() {\r\n        const menuCSS = {\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n\r\n        return (\r\n            <ul className='menu' style={menuCSS}>\r\n                <li className='menu--item header'>Basic</li>\r\n                <li className='menu--item'><button data-value='number' onClick={this.handleClick}>Number</button></li>\r\n                <li className='menu--item'><button data-value='display' onClick={this.handleClick}>Display</button></li>\r\n                <li className='menu--item'><button data-value='math' onClick={this.handleClick}>Math</button></li>\r\n                <li className='menu--item'><button data-value='wave' onClick={this.handleClick}>Wave</button></li>\r\n                \r\n                <li className='menu--item header'>Colour</li>\r\n                <li className='menu--item'><button data-value='rgbSplit' onClick={this.handleClick}>Split RGB</button></li>\r\n                <li className='menu--item'><button data-value='rgbCombine' onClick={this.handleClick}>Combine RGB</button></li>\r\n                <li className='menu--item'><button data-value='picker' onClick={this.handleClick}>Colour Picker</button></li>\r\n                <li className='menu--item'><button data-value='ramp' onClick={this.handleClick}>Colour Ramp</button></li>\r\n            </ul>\r\n        )\r\n    }\r\n}","export default function makeNode(type, x, y) {\r\n    let node = {\r\n        type: type,\r\n        title: 'New Node',\r\n        id: Math.random(),\r\n        x: x,\r\n        y: y,\r\n        width: 250,\r\n        height: 100,\r\n        outputs: [],\r\n        inputs: []\r\n    }\r\n\r\n    if (type === 'number') {\r\n        node.title = 'Number'\r\n        node.width = 180;\r\n        node.outputs.push({ label: 'Output', value: 0, id: 0 })\r\n    }\r\n    if (type === 'math') {\r\n        node.title = 'Math';\r\n        node.height = 130;\r\n        node.width = 210;\r\n        node.outputs.push({ label: 'Output', value: 0, id: 0 })\r\n        node.inputs.push({ label: 'Input A', value: 0, id: 0 })\r\n        node.inputs.push({ label: 'Input B', value: 0, id: 1 })\r\n    }\r\n    if (type === 'display') {\r\n        node.title = 'Display'\r\n        node.width = 120\r\n        node.height = 90\r\n        node.inputs.push({ label: 'Input', value: 0, id: 0 })\r\n    }\r\n    \r\n    if (type === 'rgbCombine') {\r\n        node.title = 'Combine RGB'\r\n        node.width = 140\r\n        node.inputs.push({ label: 'R', value: 0, id: 0 })\r\n        node.inputs.push({ label: 'G', value: 0, id: 1 })\r\n        node.inputs.push({ label: 'B', value: 0, id: 2 })\r\n        node.outputs.push({ label: 'Color', value: 0, id: 0, type: 'color' })\r\n    }\r\n    if (type === 'rgbSplit') {\r\n        node.title = 'Split RGB'\r\n        node.width = 140\r\n        node.inputs.push({ label: 'Color', value: 0, id: 0, type: 'color' }) \r\n        node.outputs.push({ label: 'R', value: 0, id: 0 })\r\n        node.outputs.push({ label: 'G', value: 0, id: 1 })\r\n        node.outputs.push({ label: 'B', value: 0, id: 2 })\r\n    }\r\n    if (type === 'rgbPicker') {\r\n        node.title = 'Color Picker'\r\n        node.width = 140\r\n        node.outputs.push({ label: 'Color', type: 'color', value: [123,32,255], id: 0 })\r\n    }\r\n\r\n    if (type === 'pen') {\r\n        node.title = 'Pen'\r\n        node.inputs.push({ label: 'Radius', value: 0, id: 0 })\r\n        node.inputs.push({ label: 'Colour', value: 0, id: 1 })\r\n    }\r\n    \r\n    if (type === 'wave') {\r\n        node.title = 'Wave'\r\n        node.height = 260;\r\n        node.inputs.push({ label: 'Amplitude', value: 0, id: '0' });\r\n        node.inputs.push({ label: 'Frequency', value: 0, id: '1' });\r\n        node.inputs.push({ label: 'Phase', value: 0, id: '2' });\r\n    \r\n        node.outputs.push({ label: 'Value', value: 0, id: '0' });\r\n    }\r\n    if (type === 'ramp') {\r\n        node.title = 'Colour Ramp'\r\n        node.height = 200;\r\n        node.inputs.push({ label: 'Position', value: 0.2, id: '0' }); \r\n        node.outputs.push({ label: 'Color', value: [0,0,0], id: '0', type: 'color' });\r\n    }\r\n\r\n    return node;\r\n\r\n}","import React from 'react'\r\nimport * as utils from './utils.js';\r\nimport NumberNode from './NumberNode.js'\r\nimport DisplayNode from './DisplayNode.js'\r\nimport MathNode from './MathNode.js'\r\nimport PenNode from './PenNode'\r\nimport DataNode from './DataNode.js'\r\nimport RGBNode from './RGBNode.js'\r\nimport RGBSplitNode from './RGBSplitNode.js'\r\nimport RGBPickerNode from './RGBPickerNode.js'\r\nimport WaveNode from './WaveNode.js'\r\nimport RampNode from './RampNode.js'\r\nimport InfoNode from './InfoNode.js'\r\n\r\nimport Connection from './Connection.js'\r\nimport testState from './testState.js'\r\nimport ContextMenu from './ContextMenu.js'\r\nimport makeNode from './makeNode.js'\r\n\r\nexport default class NodeContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.updateNodes = this.updateNodes.bind(this)\r\n        this.getNodeByID = this.getNodeByID.bind(this)\r\n        this.updateOutput = this.updateOutput.bind(this)\r\n        this.addNode = this.addNode.bind(this)\r\n        this.removeNode = this.removeNode.bind(this)\r\n        this.handleMouseMove = this.handleMouseMove.bind(this)\r\n        this.handleContextMenu = this.handleContextMenu.bind(this)\r\n        this.startDraftConnection = this.startDraftConnection.bind(this)\r\n        this.finishDraftConnection = this.finishDraftConnection.bind(this)\r\n        this.handleMouseUp = this.handleMouseUp.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.componentDidMount = this.componentDidMount.bind(this)\r\n        this.state = testState;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState((prevState) => {\r\n            prevState.nodes.push(makeNode('ramp', 300, 400))\r\n            prevState.nodes.push(makeNode('rgbPicker', 600, 400))\r\n            return prevState;\r\n        })\r\n    }\r\n\r\n    addNode(type) {\r\n        this.setState((prevState) => {\r\n            prevState.nodes.push(makeNode(type, this.state.contextMenu.x, this.state.contextMenu.y))\r\n            prevState.contextMenu.isOpen = false;\r\n            return prevState;\r\n        })\r\n    }\r\n    removeNode(nodeID) {\r\n        let index = this.getNodeByID(nodeID);\r\n\r\n        this.setState((prevState) => {\r\n            // Find affected connections and remove them\r\n            prevState.connections = prevState.connections.filter(c => {\r\n                if (c.from.nodeID === nodeID || c.to.nodeID === nodeID) {\r\n                    return false\r\n                }\r\n                return true;\r\n            })\r\n\r\n            prevState.nodes.splice(index, 1)\r\n            return prevState;\r\n        })\r\n\r\n    }\r\n    startDraftConnection(nodeID, socket) {\r\n        this.setState({\r\n            draftConnection: {\r\n                isActive: true,\r\n                from: { nodeID: nodeID, socket: socket }\r\n            }\r\n        })\r\n    }\r\n\r\n    isConnectionValid(proposedConnection) {\r\n        return true;\r\n    }\r\n\r\n    finishDraftConnection(nodeID, socket) {\r\n        let proposedConnection = {\r\n            from: { nodeID: this.state.draftConnection.from.nodeID, socket: this.state.draftConnection.from.socket },\r\n            to: { nodeID: nodeID, socket: socket },\r\n            id: Math.random()\r\n        }\r\n        if (this.isConnectionValid(proposedConnection)) {\r\n            this.setState((prevState) => {\r\n                // Clear any previous connections\r\n                for (let i = 0; i < this.state.connections.length; i++) {\r\n                    let c = this.state.connections[i];\r\n                    if (c.to.nodeID === proposedConnection.to.nodeID &&\r\n                        c.to.socket === proposedConnection.to.socket) {\r\n                        prevState.connections.splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n                prevState.connections.push(proposedConnection)\r\n                return prevState;\r\n            }, () => this.updateNodes(proposedConnection.from.nodeID))\r\n            // updateNodes() in a callback because setState() is async\r\n\r\n        }\r\n    }\r\n\r\n    handleDragStart(nodeID) {\r\n        let dragIndex = this.getNodeByID(nodeID);\r\n        this.setState({\r\n            drag: {\r\n                isActive: true,\r\n                nodeIndex: dragIndex\r\n            }\r\n        })\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            drag: {\r\n                isActive: false,\r\n                nodeIndex: null\r\n            }\r\n        })\r\n    }\r\n\r\n    handleMouseMove(e) {\r\n        let deltaX = e.clientX - this.state.mouse.x;\r\n        let deltaY = e.clientY - this.state.mouse.y;\r\n        this.setState({\r\n            mouse: {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                deltaX: deltaX,\r\n                deltaY: deltaY,\r\n            }\r\n        }, function () {\r\n\r\n            if (utils.distance(this.state.mouse.x, this.state.mouse.y, this.state.contextMenu.x, this.state.contextMenu.y) > 200 && this.state.contextMenu.isOpen === true) {\r\n                this.setState({ contextMenu: { isActive: false } })\r\n            }\r\n\r\n            if (this.state.drag.isActive) {\r\n                this.setState((prevState) => {\r\n                    prevState.nodes[this.state.drag.nodeIndex].x += this.state.mouse.deltaX\r\n                    prevState.nodes[this.state.drag.nodeIndex].y += this.state.mouse.deltaY\r\n                    return prevState;\r\n                })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    handleMouseUp(e) {\r\n        if (this.state.draftConnection.isActive === true) {\r\n            this.setState({\r\n                draftConnection: { isActive: false }\r\n            })\r\n        }\r\n\r\n        if (this.state.drag.isActive === true) {\r\n            this.setState({\r\n                drag: { isActive: false }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleContextMenu(e) {\r\n        e.preventDefault()\r\n        this.setState({\r\n            contextMenu: {\r\n                isOpen: true,\r\n                x: e.clientX,\r\n                y: e.clientY\r\n            }\r\n        })\r\n    }\r\n\r\n    getNodeByID(id) {\r\n        for (let i = 0; i < this.state.nodes.length; i++) {\r\n            if (this.state.nodes[i].id === id) {\r\n                return i;\r\n            }\r\n        }\r\n        console.error(`Node with ID ${id} could not be found.`)\r\n        return false;\r\n    }\r\n\r\n    updateOutput(nodeID, outputIndex, newValue) {\r\n        const nodeIndex = this.getNodeByID(nodeID);\r\n        this.setState((prevState) => {\r\n            prevState.nodes[nodeIndex].outputs[outputIndex].value = newValue;\r\n            return prevState;\r\n        })\r\n    }\r\n    updateNodes(id) {\r\n\r\n        // We're going top-down\r\n        // Find every node that's connected to this one's outputs\r\n        // We're passing the origin node.\r\n        // Then all subsequent nodes call this method themselves \r\n\r\n        //console.log(`Running update from node ID ${id}.`);\r\n\r\n        let relevantConnections = []\r\n        for (let i = 0; i < this.state.connections.length; i++) {\r\n            let c = this.state.connections[i];\r\n            if (c.from.nodeID === id) {\r\n                relevantConnections.push(c)\r\n            }\r\n        }\r\n\r\n        //console.log(`Found ${relevantConnections.length} subsequent nodes.`);\r\n        for (let i = 0; i < relevantConnections.length; i++) {\r\n\r\n            const rc = relevantConnections[i];\r\n            const toIndex = this.getNodeByID(rc.to.nodeID);\r\n            const fromIndex = this.getNodeByID(rc.from.nodeID);\r\n\r\n            this.setState((prevState) => {\r\n                prevState.nodes[toIndex].inputs[rc.to.socket].value = prevState.nodes[fromIndex].outputs[rc.from.socket].value;\r\n                return prevState;\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const connectionItems = this.state.connections.map(function (c) {\r\n            let toIndex = this.getNodeByID(c.to.nodeID)\r\n            let fromIndex = this.getNodeByID(c.from.nodeID)\r\n            let x1 = this.state.nodes[fromIndex].x + this.state.nodes[fromIndex].width;\r\n            let y1 = (this.state.nodes[fromIndex].y + this.state.nodes[fromIndex].height) - ((this.state.nodes[fromIndex].outputs.length - c.from.socket) * 17);\r\n\r\n            let x2 = this.state.nodes[toIndex].x;\r\n            let y2 = (this.state.nodes[toIndex].y + this.state.nodes[toIndex].height) - ((this.state.nodes[toIndex].inputs.length - c.to.socket) * 17);\r\n\r\n            return (<Connection key={c.id} x1={x1} y1={y1} x2={x2} y2={y2}></Connection>)\r\n        }, this)\r\n\r\n        const nodeItems = this.state.nodes.map(function (node) {\r\n            if (node.type === 'number') {\r\n                return <NumberNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} updateOutput={this.updateOutput} update={this.updateNodes} outputs={node.outputs} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></NumberNode>\r\n            } else if (node.type === 'data') {\r\n                return <DataNode drawingData={this.props.drawingData} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} outputs={node.outputs} update={this.updateNodes} updateOutput={this.updateOutput} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></DataNode>\r\n\r\n            } else if (node.type === 'display') {\r\n                return <DisplayNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} inputs={node.inputs} update={this.updateNodes} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></DisplayNode>\r\n            } else if (node.type === 'math') {\r\n                return <MathNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} inputs={node.inputs} outputs={node.outputs} updateOutput={this.updateOutput} updateNodes={this.updateNodes} width={node.width} height={node.height} x={node.x} y={node.y} id={node.id} key={node.id} title={node.title}></MathNode>\r\n            } else if (node.type === 'pen') {\r\n                return <PenNode pen={this.props.pen} updatePen={this.props.updatePen} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} updateOutput={this.updateOutput} update={this.updateNodes} inputs={node.inputs} outputs={node.outputs} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></PenNode>\r\n            } else if (node.type === 'rgbCombine') {\r\n                return <RGBNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} updateNodes={this.updateNodes} updateOutput={this.updateOutput} update={this.updateNodes} outputs={node.outputs} inputs={node.inputs} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></RGBNode>\r\n                \r\n            } else if (node.type === 'rgbPicker') {\r\n                return <RGBPickerNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} updateNodes={this.updateNodes} updateOutput={this.updateOutput} update={this.updateNodes} outputs={node.outputs} inputs={node.inputs} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></RGBPickerNode>\r\n                \r\n            } else if (node.type === 'rgbSplit') {\r\n                return <RGBSplitNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} updateNodes={this.updateNodes} updateOutput={this.updateOutput} update={this.updateNodes} outputs={node.outputs} inputs={node.inputs} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></RGBSplitNode>\r\n            } else if (node.type === 'wave') {\r\n                return <WaveNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} updateNodes={this.updateNodes} updateOutput={this.updateOutput} update={this.updateNodes} outputs={node.outputs} inputs={node.inputs} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></WaveNode>\r\n            } else if (node.type === 'ramp'){\r\n                return <RampNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} updateNodes={this.updateNodes} updateOutput={this.updateOutput} update={this.updateNodes} outputs={node.outputs} inputs={node.inputs} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></RampNode>\r\n            } else if (node.type === 'info'){\r\n                return <InfoNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></InfoNode>\r\n            }\r\n            return false;\r\n        }, this);\r\n\r\n        let contextMenu = '';\r\n        if (this.state.contextMenu.isOpen) {\r\n            contextMenu = <ContextMenu addNode={this.addNode} x={this.state.contextMenu.x} y={this.state.contextMenu.y}></ContextMenu>\r\n        }\r\n\r\n        let draftConnection = '';\r\n        if (this.state.draftConnection.isActive) {\r\n            let fromNode = this.state.nodes[this.getNodeByID(this.state.draftConnection.from.nodeID)]\r\n            let x1 = fromNode.x + fromNode.width;\r\n            let y1 = fromNode.y + fromNode.height - ((fromNode.outputs.length - this.state.draftConnection.from.socket) * 17);\r\n            draftConnection = <Connection key={0} x1={x1} y1={y1} x2={this.state.mouse.x} y2={this.state.mouse.y}></Connection>\r\n        }\r\n\r\n        return (\r\n            <div className='nodeContainer' onMouseUp={this.handleMouseUp} onMouseMove={this.handleMouseMove} onContextMenu={this.handleContextMenu}>\r\n                < svg width={this.props.width + 'px'} height={this.props.height + 'px'} >\r\n                    {connectionItems}\r\n                    {draftConnection}\r\n                </svg>\r\n                {contextMenu}\r\n                {nodeItems}\r\n            </div >\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport * as utils from './utils.js';\r\n\r\nexport default class Canvas extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isDrawing: false\r\n    }\r\n\r\n    this.canvasRef = React.createRef();\r\n    this.c = null;\r\n\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleMouseUp = this.handleMouseUp.bind(this);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    this.clear = this.clear.bind(this);\r\n    this.resetData = this.resetData.bind(this);\r\n    this.saveImage = this.saveImage.bind(this)\r\n  }\r\n  componentDidMount() {\r\n    this.c = this.canvasRef.current.getContext('2d');\r\n    this.c.fillCircle = function (x, y, r) {\r\n      this.beginPath();\r\n      this.arc(x, y, r, 0, 2 * Math.PI, false);\r\n      this.fill();\r\n    };\r\n  }\r\n  handleMouseMove(e) {\r\n    if (this.state.isDrawing) {\r\n      this.props.updateDrawingData({\r\n        distance: this.props.drawingData.distance + 1,\r\n        speed: 0,\r\n        x: e.clientX,\r\n        y: e.clientY - this.props.height\r\n      })\r\n\r\n      let x = e.clientX\r\n      let y = e.clientY - this.props.height;\r\n      this.c.fillStyle = utils.formatRGB(this.props.pen.fill);\r\n      this.c.fillCircle(x, y, this.props.pen.radius)\r\n    }\r\n  }\r\n  handleMouseDown(e) {\r\n    this.setState({ isDrawing: true })\r\n    this.props.updateDrawingData({\r\n      distance: this.props.drawingData.distance + 1,\r\n      speed: 0,\r\n      x: e.clientX,\r\n      y: e.clientY - this.props.height\r\n    })\r\n    let x = e.clientX\r\n    let y = e.clientY - this.props.height;\r\n    this.c.fillStyle = utils.formatRGB(this.props.pen.fill);\r\n    this.c.fillCircle(x, y, this.props.pen.radius)\r\n  }\r\n  handleMouseUp() {\r\n    this.setState({ isDrawing: false })\r\n  }\r\n  clear() {\r\n    this.c.clearRect(0, 0, this.props.width, this.props.height)\r\n  }\r\n  saveImage(e) {\r\n    this.c.canvas.toBlob((blob) => {\r\n      let URLObj = window.URL || window.webkitURL;\r\n      let a = document.createElement(\"a\");\r\n      a.href = URLObj.createObjectURL(blob);\r\n      a.download = \"untitled.png\";\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n    });\r\n  }\r\n  resetData() {\r\n    this.props.updateDrawingData({\r\n      distance: 0,\r\n      speed: 0,\r\n      area: 0,\r\n      x: 0,\r\n      y: 0\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='canvas panel'>\r\n        <div className='panel--menu'>\r\n          <button onClick={this.resetData}>Reset</button>\r\n          <button onClick={this.clear}>Clear</button>\r\n          <button onClick={this.saveImage}>Save</button>\r\n        </div>\r\n        <canvas height={this.props.height} width={this.props.width} ref={this.canvasRef} onMouseMove={this.handleMouseMove} onMouseDown={this.handleMouseDown} onMouseUp={this.handleMouseUp} className='world'></canvas>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport NodeContainer from './NodeContainer';\nimport Canvas from './Canvas';\n\nimport './App.css';\n\nclass App extends React.Component {\n  \n  constructor(props){\n    super(props)\n    this.state = {\n      width: 0,\n      height: 0,\n      pen: {\n        radius: 0,\n        fill: [0,0,0],\n        x: 0,\n        y: 0\n      },\n      drawingData: {\n        speed: 0,\n        distance: 0,\n        area: 0\n      }\n    }\n\n    this.updatePen = this.updatePen.bind(this)\n    this.updateDrawingData = this.updateDrawingData.bind(this)\n  }\n\n  updatePen(newPen){\n    this.setState({\n      pen: {\n        x: newPen.x,\n        y: newPen.y,\n        radius: newPen.radius,\n        fill: newPen.fill\n      }\n    })\n  }\n  updateDrawingData(newData){\n    this.setState({\n      drawingData: newData\n    })\n  }\n\n  componentWillMount(){\n    this.setState({height: window.innerHeight, width: window.innerWidth});  \n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <header className='app--header'>\n          <h1>Node Brush</h1>\n          <a href='#1'>Info</a>\n        </header>\n        <NodeContainer drawingData={this.state.drawingData} pen={this.state.pen} updatePen={this.updatePen} width={this.state.width} height={this.state.height * .5}></NodeContainer>\n        <div className='divider'></div>\n        <Canvas drawingData={this.state.drawingData} updateDrawingData={this.updateDrawingData} width={this.state.width} height={this.state.height * .5} pen={this.state.pen}></Canvas>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// if (module.hot) {\n//     module.hot.accept();\n// }\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}