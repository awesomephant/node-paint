{"version":3,"sources":["utils.js","Socket.js","NumberNode.js","DisplayNode.js","MathNode.js","PenNode.js","DataNode.js","RGBNode.js","WaveNode.js","RampNode.js","Connection.js","testState.js","ContextMenu.js","makeNode.js","NodeContainer.js","Canvas.js","App.js","serviceWorker.js","index.js"],"names":["formatRGB","rgb","concat","compareArrays","a","b","length","i","Socket","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMouseDown","bind","assertThisInitialized","handleMouseDp","handleMouseUp","e","handleDraftConnection","id","handleDraftConnectionDrop","react_default","createElement","className","data-type","type","onMouseDown","onMouseUp","label","React","Component","NumberNode","state","dragging","handleClose","handleChange","handleDragStart","handleDragEnd","handleDraftConection","handleDraftConectionDrop","removeNode","v","parseFloat","target","value","isNaN","updateOutput","update","setState","socketID","startDraftConnection","finishDraftConection","_this2","nodeCSS","width","height","transform","x","y","outputs","map","socket","Socket_Socket","key","finishDraftConectionDrop","data-dragging","style","title","onClick","viewBox","d","onChange","DisplayNode","finishDraftConnection","inputs","toFixed","MathNode","solve","componentDidUpdate","handleSelect","operation","result","prevProps","outputValue","updateNodes","PenNode","r","radius","fill","newPen","pen","updatePen","drawingData","distance","g","componentToHex","c","hex","toString","utils","finishDraftConnectionDrop","canvasRef","createRef","drawWave","componentDidMount","current","getContext","fillCircle","beginPath","arc","Math","PI","canvas","n","t","f","ro","p","sin","asin","sgn","atan","tan","clearRect","fillStyle","fillRect","moveTo","lineTo","lineWidth","stroke","closePath","ref","draggingStopIndex","stops","position","color","drawGradient","handleStopColorChange","handleStopMouseDown","handleStopMouseUp","handleStopDrag","addStop","removeStop","gradient","createLinearGradient","forEach","stop","addColorStop","index","dataset","prevState","console","log","push","splice","clientX","preventDefault","imageData","getImageData","data","_this3","stopCSS","left","background","data-index","onMouseMove","Connection","x1","y1","x2","y2","generatePath","testState","contextMenu","isOpen","draftConnection","isActive","from","nodeID","mouse","drag","nodeIndex","nodes","connections","to","ContextMenu","handleClick","addNode","getAttribute","menuCSS","data-value","makeNode","node","random","NodeContainer","getNodeByID","handleMouseMove","handleContextMenu","filter","proposedConnection","isConnectionValid","dragIndex","deltaX","deltaY","clientY","_this4","sqrt","pow","error","outputIndex","newValue","_this5","relevantConnections","_loop","rc","toIndex","fromIndex","connectionItems","Connection_Connection","nodeItems","NumberNode_NumberNode","DataNode_NumberNode","DisplayNode_DisplayNode","MathNode_MathNode","PenNode_PenNode","RGBNode_NumberNode","WaveNode_NumberNode","RampNode_NumberNode","ContextMenu_ContextMenu","fromNode","onContextMenu","Canvas","isDrawing","clear","resetData","updateDrawingData","speed","area","App","newData","window","innerHeight","innerWidth","NodeContainer_NodeContainer","Canvas_Canvas","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88f13fb7.chunk.js","sourcesContent":["export function distance(x1, y1, x2, y2) {\r\n    return Math.sqrt(Math.pow((x1 - x2), 2) - Math.pow((y1 - y2), 2));\r\n}\r\n\r\nexport function formatRGB(rgb) {\r\n    return `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`\r\n}\r\n\r\nexport function compareArrays(a, b) {\r\n    if (a.length !== b.length) { return false }\r\n    for (let i = 0; i < a.length; i++) {\r\n        if (a[i] !== b[i]) {\r\n            return false\r\n        }\r\n    }\r\n    return true;\r\n}","import React from 'react';\r\n\r\nexport default class Socket extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleMouseDp = this.handleMouseUp.bind(this);\r\n  }\r\n\r\n  handleMouseDown(e) {\r\n    this.props.handleDraftConnection(this.props.id);\r\n  }\r\n  \r\n  handleMouseUp(e) {\r\n    this.props.handleDraftConnectionDrop(this.props.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li className='socket' data-type={this.props.type}>\r\n        <span onMouseDown={this.handleMouseDown} onMouseUp={this.handleMouseDp} className='socket--plug'></span>\r\n        <span className='socket--label'>{this.props.label}</span>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Socket from './Socket.js';\r\n\r\nexport default class NumberNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dragging: false\r\n        }\r\n\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleDraftConection = this.handleDraftConection.bind(this)\r\n        this.handleDraftConectionDrop = this.handleDraftConectionDrop.bind(this)\r\n    }\r\n\r\n    handleClose(){\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    handleChange(e) {\r\n        let v = parseFloat(e.target.value)\r\n        if (isNaN(v)){v = 0}\r\n        this.props.updateOutput(this.props.id, 0, v)\r\n        this.props.update(this.props.id)\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    handleDraftConection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConectionDrop(socketID) {\r\n        this.props.finishDraftConection(this.props.id, socketID)\r\n    }\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket key={socket.id} id={socket.id} finishDraftConectionDrop={this.handleDraftConectionDrop} handleDraftConnection={this.handleDraftConection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>\r\n                    <span>{this.props.title}</span>\r\n                    <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                    Close</button>\r\n                </header>\r\n                <div className='node-body'>\r\n                    <input type='number' value={this.props.outputs[0].value} onChange={this.handleChange}></input>\r\n                </div>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Socket from './Socket.js'\r\n\r\nexport default class DisplayNode extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dragging: false\r\n        }\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this);\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleClose = this.handleClose.bind(this)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n    handleClose() {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket handleDraftConnectionDrop={this.handleDraftConnectionDrop} key={socket.id} id={socket.id} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node' key={this.props.id} style={nodeCSS} >\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>Display\r\n                <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                        Close</button>\r\n                </header>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n                <div className='node-body'>\r\n                    <h2>{parseFloat(this.props.inputs[0].value).toFixed(2)}</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","// This is called Math but it just adds two inputs\r\nimport React from 'react'\r\nimport Socket from './Socket.js';\r\nexport default class MathNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.solve = this.solve.bind(this)\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this)\r\n        this.handleSelect = this.handleSelect.bind(this)\r\n        this.handleDraftConnection = this.handleDraftConnection.bind(this)\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleClose = this.handleClose.bind(this);\r\n\r\n        this.state = {\r\n            operation: 'add'\r\n        }\r\n    }\r\n\r\n    handleClose() {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    solve() {\r\n        let a = parseFloat(this.props.inputs[0].value);\r\n        let b = parseFloat(this.props.inputs[1].value);\r\n        let result = 0;\r\n        // y(t) = A sin (2PI f t + ro) where:\r\n        // A - Amplitude\r\n        // f - Frequency\r\n        // ro - Phase\r\n\r\n        if (this.state.operation === 'add') { result = a + b; }\r\n        if (this.state.operation === 'subtract') { result = a - b; }\r\n        if (this.state.operation === 'multiply') { result = a * b; }\r\n        if (this.state.operation === 'divide' && b !== 0) { result = a / b; }\r\n\r\n        return result;\r\n    }\r\n\r\n    handleSelect(e) {\r\n        this.setState({ operation: e.target.value })\r\n    }\r\n\r\n    handleDraftConnection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let outputValue = this.solve();\r\n        if (this.props.outputs[0].value !== outputValue) {\r\n            this.props.updateOutput(this.props.id, 0, outputValue)\r\n            this.props.updateNodes(this.props.id);\r\n        }\r\n    }\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket handleDraftConnectionDrop={this.handleDraftConnectionDrop} key={socket.id} id={socket.id} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket key={socket.id} id={socket.id} finishDraftConectionDrop={this.handleDraftConectionDrop} handleDraftConnection={this.handleDraftConnection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node' style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>Math\r\n                <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                        Close</button>\r\n                </header>\r\n                <div className='node-body'>\r\n                    <select value={this.state.operation} onChange={this.handleSelect}>\r\n                        <option value='add'>Add</option>\r\n                        <option value='subtract'>Subtract</option>\r\n                        <option value='multiply'>Multiply</option>\r\n                        <option value='divide'>Divide</option>\r\n                        <option value='average'>Average</option>\r\n                        <option value='dot'>Dot Product</option>\r\n                        <option value='cross'>Cross Product</option>\r\n                        <option value='normal'>Normalize</option>\r\n                    </select>\r\n                </div>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Socket from './Socket.js'\r\n\r\nexport default class PenNode extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dragging: false\r\n        }\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this);\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this)\r\n        this.solve = this.solve.bind(this)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n    solve() {\r\n        let r = this.props.inputs[0].value\r\n        if (r < 0){r = 0}\r\n        let newPen = {\r\n            radius: r,\r\n            fill: this.props.inputs[1].value\r\n        };\r\n        return newPen;\r\n    }\r\n    componentDidUpdate() {\r\n        let newPen = this.solve();\r\n        if (this.props.pen.radius !== newPen.radius ||\r\n            this.props.pen.fill !== newPen.fill) {\r\n            this.props.updatePen(newPen)\r\n        }\r\n    }\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket type={socket.type} key={socket.id} id={socket.id} handleDraftConnectionDrop={this.handleDraftConnectionDrop} handleDraftConnection={this.handleDraftConnection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node permanent' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>{this.props.title}</header>\r\n                <div className='node-body'>\r\n                </div>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Socket from './Socket.js';\r\n\r\nexport default class NumberNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dragging: false\r\n        }\r\n\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleDraftConection = this.handleDraftConection.bind(this)\r\n        this.handleDraftConectionDrop = this.handleDraftConectionDrop.bind(this)\r\n\r\n    }\r\n\r\n    handleClose(e){\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        let d = this.props.drawingData.distance;\r\n        let x = this.props.drawingData.x;\r\n        let y = this.props.drawingData.y;\r\n\r\n        if (isNaN(x)){x = 0}\r\n        if (isNaN(y)){y = 0}\r\n\r\n        if (d !== this.props.outputs[0].value){\r\n            this.props.updateOutput(this.props.id, 0, d)\r\n            this.props.update(this.props.id)\r\n        }\r\n        if (x !== this.props.outputs[3].value){\r\n            this.props.updateOutput(this.props.id, 3, x)\r\n            this.props.update(this.props.id)\r\n        }\r\n         if (y !== this.props.outputs[4].value){\r\n             this.props.updateOutput(this.props.id, 4, y)\r\n             this.props.update(this.props.id)\r\n         }\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    handleDraftConection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConectionDrop(socketID) {\r\n        this.props.finishDraftConection(this.props.id, socketID)\r\n    }\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket type={socket.type} key={socket.id} id={socket.id} finishDraftConectionDrop={this.handleDraftConectionDrop} handleDraftConnection={this.handleDraftConection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node permanent' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>\r\n                    <span>{this.props.title}</span>\r\n                </header>\r\n                <div className='node-body'>\r\n                </div>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Socket from './Socket.js';\r\nimport * as utils from './utils.js';\r\n\r\nexport default class NumberNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dragging: false\r\n        }\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleDraftConnection = this.handleDraftConnection.bind(this)\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this)\r\n    }\r\n\r\n    handleClose(e) {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    rgbToHex(rgb) {\r\n        const r = rgb[0]\r\n        const g = rgb[1]\r\n        const b = rgb[2]\r\n\r\n        function componentToHex(c) {\r\n            var hex = c.toString(16);\r\n            return hex.length === 1 ? \"0\" + hex : hex;\r\n        }\r\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n    }\r\n\r\n    handleChange(e) {\r\n        let v = e.target.value\r\n        this.props.updateOutput(this.props.id, 0, v)\r\n        this.props.update(this.props.id)\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    solve() {\r\n        let r = parseFloat(this.props.inputs[0].value);\r\n        let g = parseFloat(this.props.inputs[1].value);\r\n        let b = parseFloat(this.props.inputs[2].value);\r\n\r\n        if (r > 255){r = 255}\r\n        if (g > 255){g = 255}\r\n        if (b > 255){b = 255}\r\n\r\n        return [r, g, b];\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        let outputValue = this.solve();\r\n        if (utils.compareArrays(this.props.outputs[0].value, outputValue) === false) {\r\n            this.props.updateOutput(this.props.id, 0, outputValue)\r\n            this.props.updateNodes(this.props.id);\r\n        }\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    handleDraftConnection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket handleDraftConnectionDrop={this.handleDraftConnectionDrop} key={socket.id} id={socket.id} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket type={socket.type} key={socket.id} id={socket.id} finishDraftConnectionDrop={this.handleDraftConnectionDrop} handleDraftConnection={this.handleDraftConnection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>\r\n                    <span>{this.props.title}</span>\r\n                    <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                        Close</button>\r\n                </header>\r\n                <div className='node-body'>\r\n                    {/* <input type='color' value={this.rgbToHex(this.props.outputs[0].value)} onChange={this.handleChange}></input> */}\r\n                </div>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Socket from './Socket.js';\r\n\r\nexport default class NumberNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dragging: false,\r\n            operation: 'sine'\r\n        }\r\n\r\n        this.c = null;\r\n        this.canvasRef = React.createRef();\r\n\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleSelect = this.handleSelect.bind(this)\r\n        this.handleDraftConnection = this.handleDraftConnection.bind(this)\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this)\r\n        this.solve = this.solve.bind(this);\r\n        this.drawWave = this.drawWave.bind(this)\r\n\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this);\r\n    }\r\n\r\n    handleClose(e) {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    handleSelect(e) {\r\n        this.setState({ operation: e.target.value })\r\n    }\r\n\r\n    handleChange(e) {\r\n        let v = this.solve()\r\n        this.props.updateOutput(this.props.id, 0, v)\r\n        this.props.update(this.props.id)\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    handleDraftConnection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.c = this.canvasRef.current.getContext('2d')\r\n        this.c.fillCircle = function (x, y, r) {\r\n            this.beginPath();\r\n            this.arc(x, y, r, 0, 2 * Math.PI, false);\r\n            this.fill();\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.drawWave()\r\n        //        let outputValue = this.solve(this.c.canvas.width / 2);\r\n        let outputValue = this.solve(this.c.canvas.width / 2);\r\n        if (this.props.outputs[0].value !== outputValue) {\r\n            this.props.updateOutput(this.props.id, 0, outputValue)\r\n            this.props.updateNodes(this.props.id);\r\n        }\r\n    }\r\n\r\n    sgn(n) {\r\n        if (n > 0) { return 1 }\r\n        if (n === 0) { return 0 }\r\n        if (n < 0) { return -1 }\r\n    }\r\n\r\n    solve(t) {\r\n        let a = this.props.inputs[0].value;\r\n        let f = this.props.inputs[1].value;\r\n        let ro = this.props.inputs[2].value;\r\n        let p = 1 / f;\r\n\r\n        function cotan(x) { return 1 / Math.tan(x); }\r\n        if (this.state.operation === 'sine') {\r\n            return a * Math.sin((2 * Math.PI) * f * t + ro);\r\n        }\r\n\r\n        if (this.state.operation === 'triangle') {\r\n            a *= .65;\r\n            return a * Math.asin(Math.sin(((2 * Math.PI) / p) * t + ro));\r\n        }\r\n        if (this.state.operation === 'square') {\r\n            return a * this.sgn(Math.sin((2 * Math.PI) * f * t + ro));\r\n        }\r\n        if (this.state.operation === 'sawtooth') {\r\n            return (-2 * a) / Math.PI * Math.atan(cotan((t * Math.PI) / p + ro / 2));\r\n        }\r\n\r\n    }\r\n\r\n    drawWave() {\r\n        const resolution = .1;\r\n\r\n        this.c.clearRect(0, 0, this.c.canvas.width, this.c.canvas.height)\r\n        this.c.fillStyle = 'lightgray';\r\n        for (let i = 0; i < 15; i++) { this.c.fillRect(20 * i + 15, 0, 1, this.props.height) }\r\n        for (let i = 0; i < 15; i++) { this.c.fillRect(0, 20 * i + 15, this.props.width, 1) }\r\n\r\n        this.c.fillStyle = 'black';\r\n\r\n        this.c.fillCircle(this.c.canvas.width / 2, this.solve(this.c.canvas.width / 2) * -1 + 60, 3)\r\n        this.c.fillRect(0, 60, this.c.canvas.width, 1)\r\n\r\n        this.c.beginPath();\r\n        this.c.moveTo(0, 60)\r\n\r\n        for (let x = 0; x < this.c.canvas.width; x += resolution) {\r\n            let y = this.solve(x) * -1;\r\n            this.c.lineTo(x, y + 60)\r\n        }\r\n        this.c.lineWidth = 1.5;\r\n        this.c.stroke();\r\n        this.c.closePath()\r\n    }\r\n\r\n    render() {\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket handleDraftConnectionDrop={this.handleDraftConnectionDrop} key={socket.id} id={socket.id} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket key={socket.id} id={socket.id} finishDraftConnectionDrop={this.handleDraftConnectionDrop} handleDraftConnection={this.handleDraftConnection} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n\r\n        return (\r\n            <div data-dragging={this.state.dragging} className='node' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>\r\n                    <span>{this.props.title}</span>\r\n                    <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                        Close</button>\r\n                </header>\r\n                <div className='node-body'>\r\n                    <canvas className='wave--canvas' ref={this.canvasRef} height={this.props.height - 140} width={this.props.width - 20}>\r\n                    </canvas>\r\n                    <select value={this.state.operation} onChange={this.handleSelect}>\r\n                        <option value='sine'>Sine</option>\r\n                        <option value='square'>Square</option>\r\n                        <option value='triangle'>Triangle</option>\r\n                        <option value='sawtooth'>Sawtooth</option>\r\n                    </select>\r\n                </div>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Socket from './Socket.js';\r\nimport * as utils from './utils.js';\r\n\r\nexport default class NumberNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dragging: false,  // should be a prop\r\n\r\n            draggingStopIndex: null,\r\n            stops: [\r\n                { position: 0.0, color: '#ff33aa' },\r\n                { position: 0.3, color: '#1199ff' },\r\n                { position: 1.0, color: '#aabbcc' }\r\n            ]\r\n        }\r\n\r\n        this.c = null;\r\n        this.canvasRef = React.createRef();\r\n\r\n        this.handleClose = this.handleClose.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.handleDraftConnection = this.handleDraftConnection.bind(this)\r\n        this.handleDraftConnectionDrop = this.handleDraftConnectionDrop.bind(this)\r\n        this.solve = this.solve.bind(this);\r\n        this.drawGradient = this.drawGradient.bind(this)\r\n        this.handleStopColorChange = this.handleStopColorChange.bind(this)\r\n        this.handleStopMouseDown = this.handleStopMouseDown.bind(this)\r\n        this.handleStopMouseUp = this.handleStopMouseUp.bind(this)\r\n        this.handleStopDrag = this.handleStopDrag.bind(this)\r\n        this.addStop = this.addStop.bind(this)\r\n        this.removeStop = this.removeStop.bind(this)\r\n\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this);\r\n    }\r\n\r\n    handleClose(e) {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    handleChange(e) {\r\n        let v = this.solve()\r\n        this.props.updateOutput(this.props.id, 0, v)\r\n        this.props.update(this.props.id)\r\n    }\r\n\r\n    drawGradient() {\r\n        let gradient = this.c.createLinearGradient(0, 0, this.props.width - 20, 0);\r\n\r\n        this.state.stops.forEach((stop) => {\r\n            gradient.addColorStop(stop.position, stop.color);\r\n        })\r\n\r\n        this.c.fillStyle = gradient;\r\n        this.c.fillRect(0, 0, this.c.canvas.width, this.c.canvas.height);\r\n        this.c.fillStyle = 'black';\r\n\r\n        let v = this.props.inputs[0].value;\r\n\r\n        if (v < 0) {\r\n            v = 0\r\n        } else if (v > 1) {\r\n            v = 1\r\n        };\r\n\r\n\r\n        this.c.fillRect(v * this.c.canvas.width, 12, 1, this.c.canvas.height);\r\n    }\r\n\r\n    handleDragStart() {\r\n        this.setState({\r\n            dragging: true\r\n        })\r\n        this.props.handleDragStart(this.props.id)\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            dragging: false\r\n        })\r\n        this.props.handleDragEnd(this.props.id)\r\n    }\r\n\r\n    handleStopColorChange(e) {\r\n        let index = e.target.dataset.index;\r\n        let value = e.target.value;\r\n        this.setState((prevState) => {\r\n            prevState.stops[index].color = value\r\n            return prevState;\r\n        })\r\n    }\r\n    handleStopMouseDown(e) {\r\n        this.setState({ draggingStopIndex: e.target.dataset.index })\r\n    }\r\n    handleStopMouseUp(e) {\r\n        console.log(e)\r\n        this.setState({ draggingStopIndex: null })\r\n    }\r\n\r\n    addStop(e) {\r\n        this.setState((prevState) => {\r\n            prevState.stops.push({position: .5, color: '#123543'})\r\n        })\r\n    }\r\n    removeStop(e) {\r\n        let index = e.target.dataset.index;\r\n        this.setState((prevState) => {\r\n            prevState.stops.splice(index, 1)\r\n        })\r\n    }\r\n\r\n    handleStopDrag(e) {\r\n        let x = (e.clientX - this.props.x) / (this.props.width);\r\n        if (x > 1) { x = 1 }\r\n        if (this.state.draggingStopIndex !== null) {\r\n            this.setState((prevState) => {\r\n                prevState.stops[this.state.draggingStopIndex].position = x;\r\n                return prevState;\r\n            })\r\n        }\r\n    }\r\n\r\n    handleDraftConnection(socketID) {\r\n        this.props.startDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    handleDraftConnectionDrop(socketID) {\r\n        this.props.finishDraftConnection(this.props.id, socketID)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.c = this.canvasRef.current.getContext('2d')\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.removeNode(this.props.id)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.drawGradient()\r\n        let outputValue = this.solve();\r\n\r\n        if (utils.compareArrays(this.props.outputs[0].value, outputValue) === false) {\r\n            this.props.updateOutput(this.props.id, 0, outputValue)\r\n            this.props.updateNodes(this.props.id);\r\n        }\r\n    }\r\n    handleInputMouseUp(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    solve() {\r\n        let v = this.props.inputs[0].value;\r\n        if (v > 1) { v = 1 };\r\n        if (v < 0) { v = 0 };\r\n\r\n        let x = (v * this.c.canvas.width)\r\n        let imageData = this.c.getImageData(x, 1, 1, 1).data;\r\n        return [imageData[0], imageData[1], imageData[2]]\r\n    }\r\n\r\n    render() {\r\n\r\n        const nodeCSS = {\r\n            width: `${this.props.width}px`,\r\n            height: `${this.props.height}px`,\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n        const inputs = this.props.inputs.map((socket) =>\r\n            <Socket handleDraftConnectionDrop={this.handleDraftConnectionDrop} key={socket.id} id={socket.id} value={socket.value} label={socket.label}></Socket>\r\n        );\r\n        const outputs = this.props.outputs.map((socket) =>\r\n            <Socket key={socket.id} id={socket.id} finishDraftConnectionDrop={this.handleDraftConnectionDrop} handleDraftConnection={this.handleDraftConnection} value={socket.value} type={socket.type} label={socket.label}></Socket>\r\n        );\r\n        const stops = this.state.stops.map((stop, index) => {\r\n            let stopCSS = {\r\n                left: `${stop.position * 100}%`,\r\n                background: `${stop.color}`,\r\n            }\r\n            return (\r\n                <li onMouseDown={this.handleStopMouseDown} onMouseUp={this.handleStopMouseUp} key={index} style={stopCSS} className='gradient--stop ' data-dragging={stop.dragging}>\r\n                    <input type='color' data-index={index} value={stop.color} onChange={this.handleStopColorChange}></input>\r\n                </li>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div onMouseUp={this.handleStopMouseUp} data-dragging={this.state.dragging} className='node' key={this.props.id} style={nodeCSS}>\r\n                <header onMouseDown={this.handleDragStart} onMouseUp={this.handleDragEnd} className='node-header'>\r\n                    <span>{this.props.title}</span>\r\n                    <button onClick={this.handleClose} className='node--close'>\r\n                        <svg viewBox=\"0 0 24 24\">\r\n                            <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n                        </svg>\r\n                        Close</button>\r\n                </header>\r\n                <div className='node-body'>\r\n                    <div className='gradient'>\r\n                        <canvas ref={this.canvasRef} width={this.props.width - 20 + 'px'} height='80' className='gradient--canvas'></canvas>\r\n                        <ul className='gradient--stops' onMouseMove={this.handleStopDrag}>\r\n                            {stops}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <ul className='node-inputs'>\r\n                    {inputs}\r\n                </ul>\r\n                <ul className='node-outputs'>\r\n                    {outputs}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default class Connection extends React.Component {\r\n    generatePath(x1, y1, x2, y2) {\r\n        let pathOffset = 40;\r\n        let path = `M ${x1} ${y1} C${x1 + pathOffset} ${y1}, ${x2 - pathOffset} ${y2}, ${x2} ${y2}`;\r\n       // let path = `M ${x1} ${y1} L${x2} ${y2}`;\r\n        return path;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <path  d={this.generatePath(this.props.x1,this.props.y1,this.props.x2,this.props.y2)} />\r\n        )\r\n    }\r\n}","export default {\r\n    contextMenu: {\r\n        isOpen: false,\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    draftConnection: {\r\n        isActive: false,\r\n        from: { nodeID: 0, socket: 0 }\r\n    },\r\n    mouse: {\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    drag: {\r\n        isActive: false,\r\n        nodeIndex: null\r\n    },\r\n    nodes: [\r\n        {\r\n            type: 'pen',\r\n            title: 'Pen Output',\r\n            id: 'pen',\r\n            x: 960,\r\n            y: 500,\r\n            width: 160,\r\n            height: 100,\r\n            inputs: [\r\n                { label: 'Radius', value: 35, id: 0 },\r\n                { label: 'Fill', value: 0, id: 1, type: 'color' },\r\n                { label: 'Hardness', value: 0, id: 2 }\r\n            ]\r\n        },\r\n        {\r\n            type: 'data',\r\n            title: 'Drawing Info',\r\n            id: 'data',\r\n            x: 60,\r\n            y: 70,\r\n            width: 160,\r\n            height: 150,\r\n            outputs: [\r\n                { label: 'Distance', value: 0, id: 0, type: '' },\r\n                { label: 'Area', value: 0, id: 1, type: '' },\r\n                { label: 'Direction', value: 0, id: 2, type: '' },\r\n                { label: 'Pen X', value: 0, id: 3, type: '' },\r\n                { label: 'Pen Y', value: 0, id: 4, type: '' },\r\n                { label: 'Velocity', value: 5, id: 6, type: '' }\r\n            ]\r\n        },\r\n        {\r\n            type: 'number',\r\n            title: 'Number',\r\n            id: 'n1',\r\n            x: 760,\r\n            y: 370,\r\n            width: 160,\r\n            height: 100,\r\n            outputs: [\r\n                { label: 'Value', value: 35, id: 0, type: '' }\r\n            ]\r\n        },\r\n    ],\r\n    connections: [\r\n        {id: 0, from: {nodeID: 'n1', socket: 0}, to: {nodeID: 'pen', socket: 0}}\r\n    ]\r\n}","import React from 'react';\r\nimport './css/menu.css';\r\n\r\nexport default class ContextMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    handleClick(e) {\r\n        this.props.addNode(e.target.getAttribute('data-value'))\r\n    }\r\n    render() {\r\n        const menuCSS = {\r\n            transform: `translateX(${this.props.x}px) translateY(${this.props.y}px)`\r\n        }\r\n\r\n        return (\r\n            <ul className='menu' style={menuCSS}>\r\n                <li className='menu--item header'>Basic</li>\r\n                <li className='menu--item'><button data-value='number' onClick={this.handleClick}>Number</button></li>\r\n                <li className='menu--item'><button data-value='split' onClick={this.handleClick}>Split Vector</button></li>\r\n                <li className='menu--item'><button data-value='display' onClick={this.handleClick}>Display</button></li>\r\n                <li className='menu--item'><button data-value='math' onClick={this.handleClick}>Math</button></li>\r\n                <li className='menu--item'><button data-value='wave' onClick={this.handleClick}>Wave</button></li>\r\n                \r\n                <li className='menu--item header'>Colour</li>\r\n                <li className='menu--item'><button data-value='rgb' onClick={this.handleClick}>Combine RGB</button></li>\r\n                <li className='menu--item'><button data-value='rgb' onClick={this.handleClick}>Colour Picker</button></li>\r\n                <li className='menu--item'><button data-value='ramp' onClick={this.handleClick}>Colour Ramp</button></li>\r\n                <li className='menu--item'><button data-value='math' onClick={this.handleClick}>HSV</button></li>\r\n            </ul>\r\n        )\r\n    }\r\n}","export default function makeNode(type, x, y) {\r\n    let node = {\r\n        type: type,\r\n        title: 'New Node',\r\n        id: Math.random(),\r\n        x: x,\r\n        y: y,\r\n        width: 250,\r\n        height: 100,\r\n        outputs: [],\r\n        inputs: []\r\n    }\r\n\r\n    if (type === 'number') {\r\n        node.title = 'Number'\r\n        node.width = 180;\r\n        node.outputs.push({ label: 'Output', value: 0, id: 0 })\r\n    }\r\n    if (type === 'math') {\r\n        node.title = 'Math';\r\n        node.height = 130;\r\n        node.width = 210;\r\n        node.outputs.push({ label: 'Output', value: 0, id: 0 })\r\n        node.inputs.push({ label: 'Input A', value: 0, id: 0 })\r\n        node.inputs.push({ label: 'Input B', value: 0, id: 1 })\r\n    }\r\n    if (type === 'display') {\r\n        node.title = 'Display'\r\n        node.width = 120\r\n        node.height = 90\r\n        node.inputs.push({ label: 'Input', value: 0, id: 0 })\r\n    }\r\n    \r\n    if (type === 'rgb') {\r\n        node.title = 'Combine RGB'\r\n        node.width = 140\r\n        node.inputs.push({ label: 'R', value: 0, id: 0 })\r\n        node.inputs.push({ label: 'G', value: 0, id: 1 })\r\n        node.inputs.push({ label: 'B', value: 0, id: 2 })\r\n        \r\n        node.outputs.push({ label: 'Color', value: 0, id: 0, type: 'color' })\r\n    }\r\n\r\n    if (type === 'pen') {\r\n        node.title = 'Pen'\r\n        node.inputs.push({ label: 'Radius', value: 0, id: 0 })\r\n        node.inputs.push({ label: 'Colour', value: 0, id: 1 })\r\n    }\r\n    \r\n    if (type === 'wave') {\r\n        node.title = 'Wave'\r\n        node.height = 260;\r\n        node.inputs.push({ label: 'Amplitude', value: 0, id: '0' });\r\n        node.inputs.push({ label: 'Frequency', value: 0, id: '1' });\r\n        node.inputs.push({ label: 'Phase', value: 0, id: '2' });\r\n    \r\n        node.outputs.push({ label: 'Value', value: 0, id: '0' });\r\n    }\r\n    if (type === 'ramp') {\r\n        node.title = 'Colour Ramp'\r\n        node.height = 200;\r\n        node.inputs.push({ label: 'Position', value: 0.2, id: '0' }); \r\n        node.outputs.push({ label: 'Color', value: [0,0,0], id: '0', type: 'color' });\r\n    }\r\n\r\n    return node;\r\n\r\n}","import React from 'react'\r\nimport * as utils from './utils.js';\r\nimport NumberNode from './NumberNode.js'\r\nimport DisplayNode from './DisplayNode.js'\r\nimport MathNode from './MathNode.js'\r\nimport PenNode from './PenNode'\r\nimport DataNode from './DataNode.js'\r\nimport RGBNode from './RGBNode.js'\r\nimport WaveNode from './WaveNode.js'\r\nimport RampNode from './RampNode.js'\r\n\r\nimport Connection from './Connection.js'\r\nimport testState from './testState.js'\r\nimport ContextMenu from './ContextMenu.js'\r\nimport makeNode from './makeNode.js'\r\n\r\nexport default class NodeContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.updateNodes = this.updateNodes.bind(this)\r\n        this.getNodeByID = this.getNodeByID.bind(this)\r\n        this.updateOutput = this.updateOutput.bind(this)\r\n        this.addNode = this.addNode.bind(this)\r\n        this.removeNode = this.removeNode.bind(this)\r\n        this.handleMouseMove = this.handleMouseMove.bind(this)\r\n        this.handleContextMenu = this.handleContextMenu.bind(this)\r\n        this.startDraftConnection = this.startDraftConnection.bind(this)\r\n        this.finishDraftConnection = this.finishDraftConnection.bind(this)\r\n        this.handleMouseUp = this.handleMouseUp.bind(this)\r\n        this.handleDragStart = this.handleDragStart.bind(this)\r\n        this.handleDragEnd = this.handleDragEnd.bind(this)\r\n        this.componentDidMount = this.componentDidMount.bind(this)\r\n        this.state = testState;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState((prevState) => {\r\n            prevState.nodes.push(makeNode('ramp', 300, 400))\r\n            return prevState;\r\n        })\r\n    }\r\n\r\n    addNode(type) {\r\n        this.setState((prevState) => {\r\n            prevState.nodes.push(makeNode(type, this.state.contextMenu.x, this.state.contextMenu.y))\r\n            prevState.contextMenu.isOpen = false;\r\n            return prevState;\r\n        })\r\n    }\r\n    removeNode(nodeID) {\r\n        let index = this.getNodeByID(nodeID);\r\n\r\n        this.setState((prevState) => {\r\n            // Find affected connections and remove them\r\n            prevState.connections = prevState.connections.filter(c => {\r\n                if (c.from.nodeID === nodeID || c.to.nodeID === nodeID) {\r\n                    return false\r\n                }\r\n                return true;\r\n            })\r\n\r\n            prevState.nodes.splice(index, 1)\r\n            return prevState;\r\n        })\r\n\r\n    }\r\n    startDraftConnection(nodeID, socket) {\r\n        this.setState({\r\n            draftConnection: {\r\n                isActive: true,\r\n                from: { nodeID: nodeID, socket: socket }\r\n            }\r\n        })\r\n    }\r\n\r\n    isConnectionValid(proposedConnection) {\r\n        return true;\r\n    }\r\n\r\n    finishDraftConnection(nodeID, socket) {\r\n        let proposedConnection = {\r\n            from: { nodeID: this.state.draftConnection.from.nodeID, socket: this.state.draftConnection.from.socket },\r\n            to: { nodeID: nodeID, socket: socket },\r\n            id: Math.random()\r\n        }\r\n        if (this.isConnectionValid(proposedConnection)) {\r\n            this.setState((prevState) => {\r\n                // Clear any previous connections\r\n                for (let i = 0; i < this.state.connections.length; i++) {\r\n                    let c = this.state.connections[i];\r\n                    if (c.to.nodeID === proposedConnection.to.nodeID &&\r\n                        c.to.socket === proposedConnection.to.socket) {\r\n                        prevState.connections.splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n                prevState.connections.push(proposedConnection)\r\n                return prevState;\r\n            }, () => this.updateNodes(proposedConnection.from.nodeID))\r\n            // updateNodes() in a callback because setState() is async\r\n\r\n        }\r\n    }\r\n\r\n    handleDragStart(nodeID) {\r\n        let dragIndex = this.getNodeByID(nodeID);\r\n        this.setState({\r\n            drag: {\r\n                isActive: true,\r\n                nodeIndex: dragIndex\r\n            }\r\n        })\r\n    }\r\n    handleDragEnd() {\r\n        this.setState({\r\n            drag: {\r\n                isActive: false,\r\n                nodeIndex: null\r\n            }\r\n        })\r\n    }\r\n\r\n    handleMouseMove(e) {\r\n        let deltaX = e.clientX - this.state.mouse.x;\r\n        let deltaY = e.clientY - this.state.mouse.y;\r\n        this.setState({\r\n            mouse: {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                deltaX: deltaX,\r\n                deltaY: deltaY,\r\n            }\r\n        }, function () {\r\n\r\n            if (utils.distance(this.state.mouse.x, this.state.mouse.y, this.state.contextMenu.x, this.state.contextMenu.y) > 200 && this.state.contextMenu.isOpen === true) {\r\n                this.setState({ contextMenu: { isActive: false } })\r\n            }\r\n\r\n            if (this.state.drag.isActive) {\r\n                this.setState((prevState) => {\r\n                    prevState.nodes[this.state.drag.nodeIndex].x += this.state.mouse.deltaX\r\n                    prevState.nodes[this.state.drag.nodeIndex].y += this.state.mouse.deltaY\r\n                    return prevState;\r\n                })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    handleMouseUp(e) {\r\n        if (this.state.draftConnection.isActive === true) {\r\n            this.setState({\r\n                draftConnection: { isActive: false }\r\n            })\r\n        }\r\n\r\n        if (this.state.drag.isActive === true) {\r\n            this.setState({\r\n                drag: { isActive: false }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleContextMenu(e) {\r\n        e.preventDefault()\r\n        this.setState({\r\n            contextMenu: {\r\n                isOpen: true,\r\n                x: e.clientX,\r\n                y: e.clientY\r\n            }\r\n        })\r\n    }\r\n\r\n    getNodeByID(id) {\r\n        for (let i = 0; i < this.state.nodes.length; i++) {\r\n            if (this.state.nodes[i].id === id) {\r\n                return i;\r\n            }\r\n        }\r\n        console.error(`Node with ID ${id} could not be found.`)\r\n        return false;\r\n    }\r\n\r\n    updateOutput(nodeID, outputIndex, newValue) {\r\n        const nodeIndex = this.getNodeByID(nodeID);\r\n        this.setState((prevState) => {\r\n            prevState.nodes[nodeIndex].outputs[outputIndex].value = newValue;\r\n            return prevState;\r\n        })\r\n    }\r\n    updateNodes(id) {\r\n\r\n        // We're going top-down\r\n        // Find every node that's connected to this one's outputs\r\n        // We're passing the origin node.\r\n        // Then all subsequent nodes call this method themselves \r\n\r\n        //console.log(`Running update from node ID ${id}.`);\r\n\r\n        let relevantConnections = []\r\n        for (let i = 0; i < this.state.connections.length; i++) {\r\n            let c = this.state.connections[i];\r\n            if (c.from.nodeID === id) {\r\n                relevantConnections.push(c)\r\n            }\r\n        }\r\n\r\n        //console.log(`Found ${relevantConnections.length} subsequent nodes.`);\r\n        for (let i = 0; i < relevantConnections.length; i++) {\r\n\r\n            const rc = relevantConnections[i];\r\n            const toIndex = this.getNodeByID(rc.to.nodeID);\r\n            const fromIndex = this.getNodeByID(rc.from.nodeID);\r\n\r\n            this.setState((prevState) => {\r\n                prevState.nodes[toIndex].inputs[rc.to.socket].value = prevState.nodes[fromIndex].outputs[rc.from.socket].value;\r\n                return prevState;\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const connectionItems = this.state.connections.map(function (c) {\r\n            let toIndex = this.getNodeByID(c.to.nodeID)\r\n            let fromIndex = this.getNodeByID(c.from.nodeID)\r\n            let x1 = this.state.nodes[fromIndex].x + this.state.nodes[fromIndex].width;\r\n            let y1 = (this.state.nodes[fromIndex].y + this.state.nodes[fromIndex].height) - ((this.state.nodes[fromIndex].outputs.length - c.from.socket) * 17);\r\n\r\n            let x2 = this.state.nodes[toIndex].x;\r\n            let y2 = (this.state.nodes[toIndex].y + this.state.nodes[toIndex].height) - ((this.state.nodes[toIndex].inputs.length - c.to.socket) * 17);\r\n\r\n            return (<Connection key={c.id} x1={x1} y1={y1} x2={x2} y2={y2}></Connection>)\r\n        }, this)\r\n\r\n        const nodeItems = this.state.nodes.map(function (node) {\r\n            if (node.type === 'number') {\r\n                return <NumberNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} updateOutput={this.updateOutput} update={this.updateNodes} outputs={node.outputs} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></NumberNode>\r\n            } else if (node.type === 'data') {\r\n                return <DataNode drawingData={this.props.drawingData} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} outputs={node.outputs} update={this.updateNodes} updateOutput={this.updateOutput} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></DataNode>\r\n\r\n            } else if (node.type === 'display') {\r\n                return <DisplayNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} inputs={node.inputs} update={this.updateNodes} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></DisplayNode>\r\n            } else if (node.type === 'math') {\r\n                return <MathNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} inputs={node.inputs} outputs={node.outputs} updateOutput={this.updateOutput} updateNodes={this.updateNodes} width={node.width} height={node.height} x={node.x} y={node.y} id={node.id} key={node.id} title={node.title}></MathNode>\r\n            } else if (node.type === 'pen') {\r\n                return <PenNode pen={this.props.pen} updatePen={this.props.updatePen} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} updateOutput={this.updateOutput} update={this.updateNodes} inputs={node.inputs} outputs={node.outputs} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></PenNode>\r\n            } else if (node.type === 'rgb') {\r\n                return <RGBNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} updateNodes={this.updateNodes} updateOutput={this.updateOutput} update={this.updateNodes} outputs={node.outputs} inputs={node.inputs} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></RGBNode>\r\n            } else if (node.type === 'wave') {\r\n                return <WaveNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} updateNodes={this.updateNodes} updateOutput={this.updateOutput} update={this.updateNodes} outputs={node.outputs} inputs={node.inputs} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></WaveNode>\r\n            } else if (node.type === 'ramp'){\r\n                return <RampNode removeNode={this.removeNode} handleDragStart={this.handleDragStart} handleDragEnd={this.handleDragEnd} finishDraftConnection={this.finishDraftConnection} startDraftConnection={this.startDraftConnection} updateNodes={this.updateNodes} updateOutput={this.updateOutput} update={this.updateNodes} outputs={node.outputs} inputs={node.inputs} width={node.width} height={node.height} x={node.x} y={node.y} key={node.id} id={node.id} title={node.title}></RampNode>\r\n            }\r\n            return false;\r\n        }, this);\r\n\r\n        let contextMenu = '';\r\n        if (this.state.contextMenu.isOpen) {\r\n            contextMenu = <ContextMenu addNode={this.addNode} x={this.state.contextMenu.x} y={this.state.contextMenu.y}></ContextMenu>\r\n        }\r\n\r\n        let draftConnection = '';\r\n        if (this.state.draftConnection.isActive) {\r\n            let fromNode = this.state.nodes[this.getNodeByID(this.state.draftConnection.from.nodeID)]\r\n            let x1 = fromNode.x + fromNode.width;\r\n            let y1 = fromNode.y + fromNode.height - ((fromNode.outputs.length - this.state.draftConnection.from.socket) * 17);\r\n            draftConnection = <Connection key={0} x1={x1} y1={y1} x2={this.state.mouse.x} y2={this.state.mouse.y}></Connection>\r\n        }\r\n\r\n        return (\r\n            <div className='nodeContainer' onMouseUp={this.handleMouseUp} onMouseMove={this.handleMouseMove} onContextMenu={this.handleContextMenu}>\r\n                < svg width={this.props.width + 'px'} height={this.props.height + 'px'} >\r\n                    {connectionItems}\r\n                    {draftConnection}\r\n                </svg>\r\n                {contextMenu}\r\n                {nodeItems}\r\n            </div >\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport * as utils from './utils.js';\r\n\r\nexport default class Canvas extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isDrawing: false\r\n    }\r\n\r\n    this.canvasRef = React.createRef();\r\n    this.c = null;\r\n\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleMouseUp = this.handleMouseUp.bind(this);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    this.clear = this.clear.bind(this);\r\n    this.resetData = this.resetData.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.c = this.canvasRef.current.getContext('2d');\r\n    this.c.fillCircle = function (x, y, r) {\r\n      this.beginPath();\r\n      this.arc(x, y, r, 0, 2 * Math.PI, false);\r\n      this.fill();\r\n    };\r\n  }\r\n  handleMouseMove(e) {\r\n    if (this.state.isDrawing) {\r\n      this.props.updateDrawingData({\r\n        distance: this.props.drawingData.distance + 1,\r\n        speed: 0,\r\n        area: 0,\r\n        x: e.clientX,\r\n        y: e.clientY - this.props.height\r\n      })\r\n\r\n      let x = e.clientX\r\n      let y = e.clientY - this.props.height;\r\n      this.c.fillStyle = utils.formatRGB(this.props.pen.fill);\r\n      this.c.fillCircle(x, y, this.props.pen.radius)\r\n    }\r\n  }\r\n  handleMouseDown(e) {\r\n    this.setState({ isDrawing: true })\r\n    this.props.updateDrawingData({\r\n      distance: this.props.drawingData.distance + 1,\r\n      speed: 0,\r\n      area: 0,\r\n      x: e.clientX,\r\n      y: e.clientY - this.props.height\r\n    })\r\n    let x = e.clientX\r\n    let y = e.clientY - this.props.height;\r\n    this.c.fillStyle = utils.formatRGB(this.props.pen.fill);\r\n    this.c.fillCircle(x, y, this.props.pen.radius)\r\n  }\r\n  handleMouseUp() {\r\n    this.setState({ isDrawing: false })\r\n  }\r\n  clear() {\r\n    this.c.clearRect(0, 0, this.props.width, this.props.height)\r\n  }\r\n  resetData() {\r\n    this.props.updateDrawingData({\r\n      distance: 0,\r\n      speed: 0,\r\n      area: 0,\r\n      x: 0,\r\n      y: 0\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='canvas panel'>\r\n        <div className='panel--menu'>\r\n          <button onClick={this.resetData}>Reset</button>\r\n          <button onClick={this.clear}>Clear</button>\r\n          <button onClick={this.clear}>Save</button>\r\n        </div>\r\n        <canvas height={this.props.height} width={this.props.width} ref={this.canvasRef} onMouseMove={this.handleMouseMove} onMouseDown={this.handleMouseDown} onMouseUp={this.handleMouseUp} className='world'></canvas>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport NodeContainer from './NodeContainer';\nimport Canvas from './Canvas';\n\nimport './App.css';\n\nclass App extends React.Component {\n  \n  constructor(props){\n    super(props)\n    this.state = {\n      width: 0,\n      height: 0,\n      pen: {\n        radius: 0,\n        fill: [0,0,0],\n        x: 0,\n        y: 0\n      },\n      drawingData: {\n        speed: 0,\n        distance: 0,\n        area: 0\n      }\n    }\n\n    this.updatePen = this.updatePen.bind(this)\n    this.updateDrawingData = this.updateDrawingData.bind(this)\n  }\n\n  updatePen(newPen){\n    this.setState({\n      pen: {\n        x: newPen.x,\n        y: newPen.y,\n        radius: newPen.radius,\n        fill: newPen.fill\n      }\n    })\n  }\n  updateDrawingData(newData){\n    this.setState({\n      drawingData: newData\n    })\n  }\n\n  componentWillMount(){\n    this.setState({height: window.innerHeight, width: window.innerWidth});  \n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <NodeContainer drawingData={this.state.drawingData} pen={this.state.pen} updatePen={this.updatePen} width={this.state.width} height={this.state.height * .5}></NodeContainer>\n        <div className='divider'></div>\n        <Canvas drawingData={this.state.drawingData} updateDrawingData={this.updateDrawingData} width={this.state.width} height={this.state.height * .5} pen={this.state.pen}></Canvas>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// if (module.hot) {\n//     module.hot.accept();\n// }\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}